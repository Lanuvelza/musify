[{"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/index.js":"1","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/App.js":"2","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reportWebVitals.js":"3","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/ViewDataLayer.js":"4","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/DataLayer.js":"5","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/YoutubeDataLayer.js":"6","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/InstagramDataLayer.js":"7","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/reducers.js":"8","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/viewReducer.js":"9","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/youtubeReducer.js":"10","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/instagramReducer.js":"11","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/Login.js":"12","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/spotify/spotify.js":"13","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/instagram/instagram.js":"14","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Player.js":"15","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/YoutubeSearchResults.js":"16","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Footer.js":"17","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Sidebar.js":"18","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Body.js":"19","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Header.js":"20","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/SearchResults.js":"21","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/YoutubeBody.js":"22","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/SongRow.js":"23","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/SidebarOption.js":"24","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/AlbumsLibrary.js":"25","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Album.js":"26","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Artist.js":"27","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelVideos.js":"28","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelProfile.js":"29","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/LatestVideo.js":"30","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube/youtube.js":"31","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelVideoItem.js":"32"},{"size":1485,"mtime":1624260112555,"results":"33","hashOfConfig":"34"},{"size":1596,"mtime":1624344111278,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1619475500148,"results":"36","hashOfConfig":"34"},{"size":406,"mtime":1623197698545,"results":"37","hashOfConfig":"34"},{"size":380,"mtime":1619508106047,"results":"38","hashOfConfig":"34"},{"size":424,"mtime":1623898724763,"results":"39","hashOfConfig":"34"},{"size":435,"mtime":1624260198097,"results":"40","hashOfConfig":"34"},{"size":2078,"mtime":1623129925825,"results":"41","hashOfConfig":"34"},{"size":299,"mtime":1623196925682,"results":"42","hashOfConfig":"34"},{"size":949,"mtime":1624163957461,"results":"43","hashOfConfig":"34"},{"size":954,"mtime":1624259773908,"results":"44","hashOfConfig":"34"},{"size":467,"mtime":1624344056018,"results":"45","hashOfConfig":"34"},{"size":809,"mtime":1623832493443,"results":"46","hashOfConfig":"34"},{"size":580,"mtime":1624346883056,"results":"47","hashOfConfig":"34"},{"size":1689,"mtime":1624170491582,"results":"48","hashOfConfig":"34"},{"size":1586,"mtime":1624344411641,"results":"49","hashOfConfig":"34"},{"size":2639,"mtime":1624344404215,"results":"50","hashOfConfig":"34"},{"size":2876,"mtime":1624344402183,"results":"51","hashOfConfig":"34"},{"size":3169,"mtime":1624169890540,"results":"52","hashOfConfig":"34"},{"size":2302,"mtime":1624344416024,"results":"53","hashOfConfig":"34"},{"size":2203,"mtime":1624344406307,"results":"54","hashOfConfig":"34"},{"size":487,"mtime":1624175750416,"results":"55","hashOfConfig":"34"},{"size":1030,"mtime":1623322951911,"results":"56","hashOfConfig":"34"},{"size":931,"mtime":1624170474151,"results":"57","hashOfConfig":"34"},{"size":941,"mtime":1624170525418,"results":"58","hashOfConfig":"34"},{"size":2009,"mtime":1624344388972,"results":"59","hashOfConfig":"34"},{"size":2065,"mtime":1624344395500,"results":"60","hashOfConfig":"34"},{"size":985,"mtime":1624241144018,"results":"61","hashOfConfig":"34"},{"size":726,"mtime":1624234255683,"results":"62","hashOfConfig":"34"},{"size":1689,"mtime":1624344409845,"results":"63","hashOfConfig":"34"},{"size":2804,"mtime":1624344392786,"results":"64","hashOfConfig":"34"},{"size":613,"mtime":1624179694650,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"kxh1qh",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"68"},"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/index.js",[],["142","143"],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/App.js",["144","145"],"import React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./components/Login\"\nimport { getTokenFromUrl } from \"./components/spotify/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./contexts/DataLayer\";\nimport Player from \"./components/player/Player\";\nimport { authorizeInstagram, searchInstagram } from \"./components/instagram/instagram\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useDataLayerValue(); \n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; \n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      console.log(\"[token]\", token); \n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists()\n      .then((playlists) => {\n        // console.log(playlists);\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\")\n      .then((playlist) => {\n        // console.log(playlist)\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\", \n          discover_weekly: playlist, \n        });\n      });\n    }\n\n    authorizeInstagram()\n    .then(response => {\n      console.log(response);\n    });\n\n  }, []);\n\n  return (\n  <div className=\"app\">\n    {token ? <Player spotify={spotify} /> : <Login />}\n  </div>\n  );\n}\n\nexport default App;\n","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reportWebVitals.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/ViewDataLayer.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/DataLayer.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/YoutubeDataLayer.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/contexts/InstagramDataLayer.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/reducers.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/viewReducer.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/youtubeReducer.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/reducers/instagramReducer.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/Login.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/spotify/spotify.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/instagram/instagram.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Player.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/YoutubeSearchResults.js",["146"],"import React from 'react';\nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport \"./styles/YoutubeSearchResults.css\";\nimport { useYoutubeDataLayerValue } from '../../contexts/YoutubeDataLayer';\nimport { getChannelVideos } from '../youtube/youtube';\n\nconst useStyles = makeStyles({\n  avatar: {\n    height: '200px',\n    width: '200px',\n    boxShadow: '5px 8px 15px black',\n  }\n})\n\n\nfunction YoutubeSearchResults({channel}) {\n  const [{}, youtubeDispatch] = useYoutubeDataLayerValue();\n\n  const classes = useStyles(); \n\n  const selectChannel = () => {\n    console.log(channel);\n    youtubeDispatch({\n      type: \"SET_CHANNEL\",\n      channel: channel\n    })\n    \n    getChannelVideos(channel)\n    .then(response => {\n\n      const videos = response;\n      const latestVideo = response[0];\n      console.log(response);\n      youtubeDispatch({\n        type: \"SET_VIDEOS\",\n        videos: videos\n      })\n\n      \n      youtubeDispatch({\n        type: \"SET_LATEST_VIDEO\", \n        latest__video: latestVideo\n      })\n      \n      youtubeDispatch({\n        type: \"SET_VIDEO\",\n        video: null\n      })\n    })\n  }\n\n\n  return (\n    <div key={channel.id} className=\"results__channelBody\">\n      <div className=\"results__channelAvatar\">\n      <Avatar \n        src={channel.snippet.thumbnails.high.url}\n        alt={channel.snippet.channelTitle}\n        className={classes.avatar}\n        onClick={selectChannel}\n      />\n      </div>\n      <div className=\"results__channelTitle\">\n        <p>{channel.snippet.title}</p>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default YoutubeSearchResults;","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Footer.js",["147"],"import React, { useEffect } from \"react\";\nimport \"./styles/Footer.css\"\nimport SpotifyPlayer from 'react-spotify-web-playback/lib';\n// import { \n//   PlayCircleOutline,\n//   SkipPrevious,\n//   SkipNext,\n//   PlaylistPlay,\n//   Shuffle,\n//   Repeat,\n//   VolumeDown,\n// } from \"@material-ui/icons\";\n// import { Grid, Slider } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\n\nfunction Footer() {\n  const [{token, playing, uri}, dispatch] = useDataLayerValue();\n  console.log(token);\n  console.log(playing);\n  console.log(uri);\n\n  useEffect(() => {\n    dispatch({\n      type: \"SET_PLAYING\",\n      playing: true\n    })\n  }, [uri])\n\n  if (!token) {\n    return null; \n  }\n\n  return ( \n    // <div className=\"footer\">\n    //   <div className=\"footer__left\">\n    //     <img \n    //       src=\"https://i.pinimg.com/originals/8d/c7/52/8dc752834195102e4cb630a53221255e.jpg\"\n    //       alt=\"\"\n    //       className=\"footer__albumLogo\"\n    //     />\n    //     <div className=\"footer__songInfo\">\n    //       <h4>My fav song</h4>\n    //       <p>Atharva</p>\n    //     </div>\n    //   </div>\n    //   <div className=\"footer__center\">\n    //     <Shuffle className=\"footer__green\" />\n    //     <SkipPrevious className=\"footer_icon\" />\n    //     <PlayCircleOutline fontSize=\"large\" className=\"footer__icon\" />\n    //     <SkipNext className=\"footer__icon\" />\n    //     <Repeat className=\"footer__green\" />\n    //   </div>\n    //   <div className=\"footer__right\">\n    //     <Grid container spacing={2}>\n    //       <Grid item> \n    //         <PlaylistPlay />\n    //       </Grid>\n    //       <Grid item> \n    //         <VolumeDown />\n    //       </Grid>\n    //       <Grid item xs> \n    //         <Slider />\n    //       </Grid>\n    //     </Grid>\n    //   </div>\n    // </div>\n    <div className=\"footer\">    \n      <SpotifyPlayer \n        token={token}\n        callback={state => {\n          if (!state.isPlaying) {\n            dispatch({\n              type: \"SET_PLAYING\",\n              playing: false\n            })\n          }\n          if (state.track) {\n            dispatch({\n              type: \"SET_CURRENT_TRACK\",\n              current_track: state.track\n            });\n          }\n        }}\n        play={playing}\n        uris={uri ? [uri] : []} \n        styles={{\n          height: '85px',\n          bgColor: '#282828',\n          color: '#1ed15e',\n          sliderColor: '#1ed15e',\n          sliderHandleColor: '#282828',\n          trackNameColor: 'white',\n          trackArtistColor: 'white',\n          errorColor: 'white',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Footer; ","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Sidebar.js",["148"],"import React from \"react\";\nimport \"./styles/Sidebar.css\"\nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\"; \nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport { LibraryMusic } from \"@material-ui/icons\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport { useViewDataLayerValue } from \"../../contexts/ViewDataLayer\";\n\n\nfunction Sidebar({ spotify }) {\n  const [{searchmode}, dispatch] = useDataLayerValue();\n  const [{}, viewDispatch] = useViewDataLayerValue();\n\n  const toggleHome = () => {\n    // dispatch({\n    //   type: \"SET_CURRENT_PLAYLIST\",\n    //   current_playlist: null\n    // });\n    // dispatch({\n    //   type: 'SET_ALBUMS',\n    //   albums: null\n    // });\n    // dispatch({\n    //   type: 'SET_ALBUM',\n    //   album: null\n    // });\n    // dispatch({\n    //   type: 'SET_ARTISTS',\n    //   albums: null\n    // });\n    // dispatch({\n    //   type: \"SET_ARTIST\", \n    //   artist: null\n    // });\n    // dispatch({\n    //   type: 'SET_TRACKS',\n    //   tracks: null\n    // });\n    viewDispatch({\n      type: \"SET_VIEW\",\n      view: null\n    });\n  }\n\n  const toggleSearch = () => {\n    console.log(\"Searchmode\");\n    dispatch({\n      type: \"SET_SEARCH_MODE\",\n      searchmode: !searchmode\n    });\n  }\n\n  const toggleSpotify = () => {\n    console.log(\"Spotify\");\n    viewDispatch({\n      type: \"SET_VIEW\",\n      view: \"SPOTIFY\"\n    });\n  }\n\n  const toggleYouTube = () => {\n    console.log(\"Youtube\");\n    viewDispatch({\n      type: \"SET_VIEW\", \n      view: \"YOUTUBE\"\n    })\n  }\n\n  const toggleInstagram = () => {\n    console.log(\"Instagram\");\n    viewDispatch({\n      type: \"SET_VIEW\",\n      view: \"INSTAGRAM\"\n    })\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <img \n        className=\"sidebar__logo\"\n        src=\"https://music-b26f.kxcdn.com/wp-content/uploads/2017/06/635963274692858859903160895_spotify-logo-horizontal-black.jpg\"\n        alt=\"Spotify logo\"\n        onClick={toggleHome}\n      />\n\n      <SidebarOption title=\"Home\" Icon={HomeIcon} handleClick={toggleHome} />\n      <SidebarOption title=\"Search\" Icon={SearchIcon} handleClick={toggleSearch} />\n      <SidebarOption title=\"Spotify\" Icon={LibraryMusic} handleClick={toggleSpotify} />\n      <SidebarOption title=\"Youtube\" Icon={YouTubeIcon} handleClick={toggleYouTube} />\n      <SidebarOption title=\"Instagram\" Icon={InstagramIcon} handleClick={toggleInstagram} />\n      <br /> \n      {/* <strong className=\"sidebar_title\">PLAYLISTS</strong>\n      <hr /> \n      {playlists?.items?.map((playlist) => (\n        <SidebarOption \n          spotify={spotify} \n          title={playlist.name} \n          key={playlist.id} \n          id={playlist.id}\n        />\n      ))} */}\n    </div>\n  );\n}\n\nexport default Sidebar;","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Body.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Header.js",["149"],"import React, { useState } from \"react\"; \nimport { Search } from \"@material-ui/icons\"; \nimport \"./styles/Header.css\";\nimport { Avatar } from \"@material-ui/core\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport { filterChannelsByVisibleSubscriberCount, searchChannels, sortChannelsBySubscriberCount } from \"../youtube/youtube\";\nimport { useYoutubeDataLayerValue } from \"../../contexts/YoutubeDataLayer\";\nimport { searchInstagram } from \"../instagram/instagram\";\n\n\nfunction Header({ spotify }) {\n  console.log(spotify);\n  const [{ user, searchmode }, dispatch] = useDataLayerValue(); \n  const [{}, youtubeDispatch] = useYoutubeDataLayerValue();\n  const [search, setSearch] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    searchInstagram(search)\n    .then(response => {\n      console.log(response);\n    })\n\n    searchChannels(search)\n    .then((results) => {\n      console.log(results);\n\n      const OrderedChannels = sortChannelsBySubscriberCount(filterChannelsByVisibleSubscriberCount(results));\n      console.log(OrderedChannels);\n\n      youtubeDispatch({\n        type: \"SET_CHANNELS\",\n        channels: OrderedChannels\n      })\n    })\n\n    spotify.searchArtists(search)\n    .then((results) => {\n      console.log(results.artists);\n      dispatch({\n        type: \"SET_ARTISTS\",\n        artists: results.artists\n      });\n    })\n    .then(() => {\n\n      dispatch({\n        type: \"SET_CURRENT_PLAYLIST\",\n        current_playlist: null\n      })\n\n      dispatch({\n        type: \"SET_SEARCHING\", \n        searching: true\n      })\n\n      setSearch(\"\");\n    });\n  }\n\n  return (\n    <div className=\"header\">\n      <div className={searchmode ? \"header__left__searchbar\" : \"header__left\"}>\n        {searchmode && \n        <>\n        <Search className=\"header__left__searchIcon\"/>\n        <form onSubmit={handleSubmit}>\n         <input \n          placeholder=\"Search for an Artist...\" \n          type=\"text\" \n          value={search} \n          onChange={(e) => {setSearch(e.target.value)}}\n        />\n        </form>\n        </>}\n        \n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\nexport default Header;","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/SearchResults.js",["150"],"import React from 'react'; \nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport \"./styles/SearchResults.css\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    height: '200px',\n    width: '200px',\n    boxShadow: '5px 8px 15px black',\n  }\n})\n\nconst filterAblumsByMarket = function(albums, country) {\n  const filteredAlbums = [];\n  const titles = {}; \n  \n  for(const album of albums) {\n    if(album.available_markets.includes(country) && !titles[album.name]) {\n      titles[album.name] = 1;\n      filteredAlbums.push(album);\n    }\n  }\n\n  filteredAlbums.sort((a,b) =>  {\n    if (a.release_date < b.release_date) {\n      return 1; \n    }\n    if (a.release_date > b.release_date) {\n      return -1; \n    }\n    return 0; \n  })\n\n  return filteredAlbums; \n}\n\nfunction SearchResults({artist, spotify}) {\n  const [{} ,dispatch] = useDataLayerValue();\n\n  const classes = useStyles();\n\n  const selectArtist = () => {\n\n    spotify.getArtistAlbums(artist.id, {include_groups: [\"album\", \"single\"], limit: 50})\n    .then((results) => {\n\n      console.log(results);\n\n      const albums = filterAblumsByMarket(results.items, \"US\");\n      console.log(albums);\n\n      dispatch({\n        type: \"SET_ALBUMS\", \n        albums: albums\n      })\n    })\n    .then(() => {\n      spotify.getArtistTopTracks(artist.id, \"US\")\n      .then((results) => {\n        dispatch({\n          type: \"SET_TRACKS\", \n          tracks: results.tracks\n        })\n      })\n    })\n    .then(() => {\n      dispatch({\n        type: \"SET_ARTIST\",\n        artist\n      })\n\n      dispatch({\n        type: \"SET_SEARCHING\",\n        searching: false\n      })\n\n      dispatch({\n        type: \"SET_ALBUM\", \n        album: null\n      })\n    });\n  }\n\n  return (\n    <div key={artist.id} className=\"results__itemBody\">\n      <div className=\"results__itemAvatar\">\n        <Avatar \n          src={artist.images.length ? artist.images[0].url : null} \n          alt={artist.name} \n          className={classes.avatar}\n          onClick={selectArtist}\n        />\n      </div>\n    <div className=\"results__itemInfo\">\n      <p>{artist.name}</p>\n    </div>\n  </div>\n  )\n}\n\nexport default SearchResults;","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/YoutubeBody.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/SongRow.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/SidebarOption.js",["151"],"import React from \"react\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/SidebarOption.css\"\n\n\nfunction SidebarOption({spotify, title, Icon, id, handleClick}) {\n  const [{}, dispatch] = useDataLayerValue();\n\n  const changePlaylist = (id) => {\n    spotify.getPlaylist(id)\n    .then((playlist) => {\n      dispatch({\n        type: 'SET_CURRENT_PLAYLIST', \n        current_playlist: playlist\n      })\n      dispatch({\n        type: 'SET_ALBUMS',\n        albums: null\n      });\n      dispatch({\n        type: 'SET_ARTISTS',\n        albums: null\n      });\n      dispatch({\n        type: 'SET_TRACKS',\n        tracks: null\n      });\n    })\n  }\n\n  return (\n    <div className=\"sidebarOption\" onClick={handleClick}>\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\n      {Icon ? <h4>{title}</h4> : <p onClick={() => {changePlaylist(id)}}>{title}</p>}\n    </div>\n  );\n}\n\nexport default SidebarOption;","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/AlbumsLibrary.js",["152"],"import React from 'react'; \nimport { useDataLayerValue } from '../../contexts/DataLayer';\nimport \"./styles/AlbumsLibrary.css\";\n\n\nfunction AlbumsLibrary({album, spotify}) {\n  const [{}, dispatch] = useDataLayerValue();\n  \n  const selectAlbum = () => {\n    console.log(album.id);\n    spotify.getAlbum(album.id)\n    .then((album) => {\n      console.log(album);\n      console.log(album.tracks);\n      dispatch({\n        type: \"SET_ALBUM\",\n        album\n      });\n      dispatch({\n        type: \"SET_TRACKS\",\n        tracks: album.tracks.items\n      })\n    });\n  }\n\n  return (\n    <div className=\"album__body\">\n      <div className=\"album__cover\" onClick={selectAlbum}>\n        <img src={album?.images[0]?.url} alt={album.name} />\n      </div>\n      <div className=\"album__Info\">\n        <h2>{album?.name}</h2>\n        <h3>{album?.album_type === \"single\" ? \"EP\" : \"Album\"}</h3>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default AlbumsLibrary; ","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Album.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/player/Artist.js",["153"],"import { Avatar, Box, makeStyles } from \"@material-ui/core\";\nimport React from \"react\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/Artist.css\";\n\nconst useStyles = makeStyles({\n  section: props => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: '40px',\n    // background: `linear-gradiant(rgb(91, 87, 115), rgba(0,0,0,1)) url(${props.backgroundImage})`,\n    backgroundImage: `url(${props.backgroundImage})`,\n    backgroundPosition: '0px -425px',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    borderRadius: '90px',\n    height: '350px',\n    width: '1550px',\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    boxShadow: '5px 10px 18px black',\n  }),\n  avatar: {\n    height: '300px',\n    width: '300px',\n    borderStyle: 'solid',\n    borderColor: 'white',\n    borderWidth: '3px',\n    boxShadow: '5px 8px 15px black'\n  },\n})\n\n\nfunction Artist({artist, albums, spotify}) {\n  const [{} ,dispatch] = useDataLayerValue();\n  const props = { backgroundImage: albums ? albums[0].images[0].url : artist.images[0].url, backgroundColor: 'pink' }\n  const classes = useStyles(props);\n\n  const handleClick = () => {\n    spotify.getArtistTopTracks(artist.id, \"US\")\n      .then((results) => {\n        console.log(\"artist tracks\", results);\n        dispatch({\n          type: \"SET_TRACKS\",\n          tracks: results.tracks\n        });\n\n        dispatch({\n          type: \"SET_ALBUM\",\n          album: null\n        })\n    });\n  }\n\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <div className={classes.section}>\n        <Avatar src={artist.images[0].url} alt={artist.name} className={classes.avatar} onClick={handleClick}/>\n        <div className=\"artist__Info\">\n          <h2>{artist ? artist.name : null}</h2>\n          <hr />\n          <div className=\"artist__followers\"> \n            <h2>Followers: {artist ? artist.followers.total : null}</h2>\n          </div>\n        </div>\n      </div>\n    </Box>\n  )\n}\n\nexport default Artist; ","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelVideos.js",["154","155"],"import React, { useEffect } from 'react';\nimport { useYoutubeDataLayerValue } from '../../contexts/YoutubeDataLayer';\nimport ChannelVideoItem from './ChannelVideoItem';\nimport \"./styles/ChannelVideos.css\"; \n\nfunction ChannelVideos() {\n  const [{channel, videos, video}, youtubeDispatch] = useYoutubeDataLayerValue();\n\n  const resetScroll = () => {\n    const element = document.getElementsByClassName(\"channelvideo__library\");\n    \n    if (element) {\n      element[0].scrollLeft = 0;\n    }\n  }\n\n  // resets the scroll back to the start every time the channel changes\n  useEffect(() => {\n    resetScroll();\n  }, [channel]);\n\n\n  return (\n    <div className=\"channelvideo__body\">\n      <div className=\"channelvideo__header\"> \n        <h2>{channel?.snippet?.title}'s Uploads</h2>\n      </div>\n      <div className=\"channelvideo__library\">\n        {videos?.map((video) => (\n          <ChannelVideoItem video={video} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ChannelVideos;","/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelProfile.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/LatestVideo.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube/youtube.js",[],"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelVideoItem.js",["156"],"import React from 'react';\nimport { useYoutubeDataLayerValue } from '../../contexts/YoutubeDataLayer';\nimport \"./styles/ChannelVideoItem.css\";\n\n\nfunction ChannelVideoItem({video}) {\n  const [{}, youtubeDispatch] =useYoutubeDataLayerValue();\n\n  const selectVideo = () => {\n    youtubeDispatch({\n      type: \"SET_VIDEO\",\n      video: video\n    })\n  }\n\n  return (\n  <div className=\"videoitem__body\">\n    <img \n      src={video?.snippet?.thumbnails?.high?.url} \n      alt={video?.snippet?.titel} \n      onClick={selectVideo}\n    />\n    <h3>{video?.snippet?.title}</h3>\n  </div>\n  )\n}\n\nexport default ChannelVideoItem;",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":8,"column":30,"nodeType":"163","messageId":"164","endLine":8,"endColumn":45},{"ruleId":"165","severity":1,"message":"166","line":56,"column":6,"nodeType":"167","endLine":56,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":17,"column":10,"nodeType":"171","messageId":"172","endLine":17,"endColumn":12},{"ruleId":"165","severity":1,"message":"173","line":27,"column":6,"nodeType":"167","endLine":27,"endColumn":11,"suggestions":"174"},{"ruleId":"169","severity":1,"message":"170","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":14,"column":10,"nodeType":"171","messageId":"172","endLine":14,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":39,"column":10,"nodeType":"171","messageId":"172","endLine":39,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":7,"column":10,"nodeType":"171","messageId":"172","endLine":7,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":7,"column":10,"nodeType":"171","messageId":"172","endLine":7,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":36,"column":10,"nodeType":"171","messageId":"172","endLine":36,"endColumn":12},{"ruleId":"161","severity":1,"message":"175","line":7,"column":28,"nodeType":"163","messageId":"164","endLine":7,"endColumn":33},{"ruleId":"161","severity":1,"message":"176","line":7,"column":36,"nodeType":"163","messageId":"164","endLine":7,"endColumn":51},{"ruleId":"169","severity":1,"message":"170","line":7,"column":10,"nodeType":"171","messageId":"172","endLine":7,"endColumn":12},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'searchInstagram' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["179"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["180"],"'video' is assigned a value but never used.","'youtubeDispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [dispatch, token]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, uri]",{"range":"187","text":"188"},[1463,1465],"[dispatch, token]",[659,664],"[dispatch, uri]"]