{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./components/Login\";\nimport { getTokenFromUrl } from \"./components/spotify/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Instagram from 'instagram-web-api';\nimport { useDataLayerValue } from \"./contexts/DataLayer\";\nimport Player from \"./components/player/Player\"; // import { authorizeInstagram } from \"./components/instagram/instagram\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    token\n  }, dispatch] = useDataLayerValue();\n\n  const authorizeInstagram = async () => {\n    const client = new Instagram({\n      username: process.env.REACT_APP_INSTAGRAM_USERNAME,\n      password: process.env.REACT_APP_INSTAGRAM_PASSWORD\n    });\n    await client.login().then(() => {\n      console.log(\"success\");\n    });\n  };\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      console.log(\"[token]\", token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        // console.log(playlists);\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then(playlist => {\n        // console.log(playlist)\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist\n        });\n      });\n    }\n\n    authorizeInstagram();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"VvoLkVsyndhTBJCVSbrCRx/YQrA=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/App.js"],"names":["React","useEffect","Login","getTokenFromUrl","SpotifyWebApi","Instagram","useDataLayerValue","Player","spotify","App","token","dispatch","authorizeInstagram","client","username","process","env","REACT_APP_INSTAGRAM_USERNAME","password","REACT_APP_INSTAGRAM_PASSWORD","login","then","console","log","hash","window","location","_token","access_token","type","setAccessToken","getMe","user","getUserPlaylists","playlists","getPlaylist","playlist","discover_weekly"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CACA;;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,SAASK,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBL,iBAAiB,EAA/C;;AAGA,QAAMM,kBAAkB,GAAG,YAAY;AACrC,UAAMC,MAAM,GAAG,IAAIR,SAAJ,CAAc;AAACS,MAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,4BAAvB;AAAqDC,MAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAA3E,KAAd,CAAf;AACA,UAAMN,MAAM,CAACO,KAAP,GACLC,IADK,CACA,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAHK,CAAN;AAID,GAND;;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,IAAI,GAAGrB,eAAe,EAA5B;AACAsB,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACVhB,MAAAA,QAAQ,CAAC;AACPkB,QAAAA,IAAI,EAAE,WADC;AAEPnB,QAAAA,KAAK,EAAEiB;AAFA,OAAD,CAAR;AAIAL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,KAAvB;AACAF,MAAAA,OAAO,CAACsB,cAAR,CAAuBH,MAAvB;AACAnB,MAAAA,OAAO,CAACuB,KAAR,GAAgBV,IAAhB,CAAsBW,IAAD,IAAU;AAC7BrB,QAAAA,QAAQ,CAAC;AACPkB,UAAAA,IAAI,EAAE,UADC;AAEPG,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMAxB,MAAAA,OAAO,CAACyB,gBAAR,GACCZ,IADD,CACOa,SAAD,IAAe;AACnB;AACAvB,QAAAA,QAAQ,CAAC;AACPkB,UAAAA,IAAI,EAAE,eADC;AAEPK,UAAAA;AAFO,SAAD,CAAR;AAID,OAPD;AAQA1B,MAAAA,OAAO,CAAC2B,WAAR,CAAoB,wBAApB,EACCd,IADD,CACOe,QAAD,IAAc;AAClB;AACAzB,QAAAA,QAAQ,CAAC;AACPkB,UAAAA,IAAI,EAAE,qBADC;AAEPQ,UAAAA,eAAe,EAAED;AAFV,SAAD,CAAR;AAID,OAPD;AAQD;;AAEDxB,IAAAA,kBAAkB;AACnB,GArCQ,EAqCN,EArCM,CAAT;AAuCA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGF,KAAK,gBAAG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAkC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAD1C;AAAA;AAAA;AAAA;AAAA,UADA;AAKD;;GAxDQC,G;UACuBH,iB;;;KADvBG,G;AA0DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./components/Login\"\nimport { getTokenFromUrl } from \"./components/spotify/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Instagram from 'instagram-web-api';\nimport { useDataLayerValue } from \"./contexts/DataLayer\";\nimport Player from \"./components/player/Player\";\n// import { authorizeInstagram } from \"./components/instagram/instagram\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useDataLayerValue(); \n\n\n  const authorizeInstagram = async () => {\n    const client = new Instagram({username: process.env.REACT_APP_INSTAGRAM_USERNAME, password: process.env.REACT_APP_INSTAGRAM_PASSWORD }); \n    await client.login()\n    .then(() => {\n      console.log(\"success\");\n    })\n  }\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; \n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      console.log(\"[token]\", token); \n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists()\n      .then((playlists) => {\n        // console.log(playlists);\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\")\n      .then((playlist) => {\n        // console.log(playlist)\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\", \n          discover_weekly: playlist, \n        });\n      });\n    }\n\n    authorizeInstagram(); \n  }, []);\n\n  return (\n  <div className=\"app\">\n    {token ? <Player spotify={spotify} /> : <Login />}\n  </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}