{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Artist.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, makeStyles, Slide } from \"@material-ui/core\";\nimport { LinearScale, Opacity } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/Artist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  section: props => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: '40px',\n    // background: `linear-gradiant(rgb(91, 87, 115), rgba(0,0,0,1)) url(${props.backgroundImage})`,\n    backgroundImage: `url(${props.backgroundImage})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    borderRadius: '90px',\n    height: '300px',\n    width: '1050px',\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    boxShadow: '5px 10px 18px black'\n  }),\n  avatar: {\n    height: '200px',\n    width: '200px',\n    borderStyle: 'solid',\n    borderColor: 'white',\n    borderWidth: '3px',\n    boxShadow: '5px 8px 15px black'\n  }\n});\n\nfunction Artist({\n  artist,\n  albums\n}) {\n  _s();\n\n  // const [{albums}, dispatch] = useDataLayerValue();\n  const props = {\n    backgroundImage: albums ? albums.items[0].images[0].url : artist.images[0].url,\n    backgroundColor: 'pink'\n  };\n  const classes = useStyles(props);\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    in: artist,\n    direction: right,\n    timeout: 1000,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.section,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: artist.images[0].url,\n          alt: artist.name,\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist__Info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: artist ? artist.name : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artist__followers\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Followers: \", artist ? artist.followers.total : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Artist, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Artist;\nexport default Artist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Artist\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Artist.js"],"names":["Avatar","Box","makeStyles","Slide","LinearScale","Opacity","React","useDataLayerValue","useStyles","section","props","display","justifyContent","alignItems","marginBottom","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","borderRadius","height","width","paddingTop","paddingBottom","boxShadow","avatar","borderStyle","borderColor","borderWidth","Artist","artist","albums","items","images","url","backgroundColor","classes","right","name","followers","total"],"mappings":"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","sourcesContent":["import { Avatar, Box, makeStyles, Slide } from \"@material-ui/core\";\nimport { LinearScale, Opacity } from \"@material-ui/icons\";\nimport React from \"react\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/Artist.css\";\n\nconst useStyles = makeStyles({\n  section: props => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: '40px',\n    // background: `linear-gradiant(rgb(91, 87, 115), rgba(0,0,0,1)) url(${props.backgroundImage})`,\n    backgroundImage: `url(${props.backgroundImage})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    borderRadius: '90px',\n    height: '300px',\n    width: '1050px',\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    boxShadow: '5px 10px 18px black',\n  }),\n  avatar: {\n    height: '200px',\n    width: '200px',\n    borderStyle: 'solid',\n    borderColor: 'white',\n    borderWidth: '3px',\n    boxShadow: '5px 8px 15px black'\n  },\n})\n\n\nfunction Artist({artist, albums}) {\n  // const [{albums}, dispatch] = useDataLayerValue();\n  const props = { backgroundImage: albums ? albums.items[0].images[0].url : artist.images[0].url, backgroundColor: 'pink' }\n  const classes = useStyles(props);\n\n\n  return (\n    <Slide in={artist} direction={right} timeout={1000}>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <div className={classes.section}>\n          <Avatar src={artist.images[0].url} alt={artist.name} className={classes.avatar}/>\n          <div className=\"artist__Info\">\n            <h2>{artist ? artist.name : null}</h2>\n            <hr />\n            <div className=\"artist__followers\"> \n              <h2>Followers: {artist ? artist.followers.total : null}</h2>\n            </div>\n          </div>\n        </div>\n      </Box>\n    </Slide>\n\n  )\n}\n\nexport default Artist; "]},"metadata":{},"sourceType":"module"}