{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SidebarOption.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/SidebarOption.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SidebarOption({\n  spotify,\n  title,\n  Icon,\n  id\n}) {\n  _s();\n\n  const [{}, dispatch] = useDataLayerValue();\n\n  const changePlaylist = id => {\n    spotify.getPlaylist(id).then(playlist => {\n      dispatch({\n        type: 'SET_CURRENT_PLAYLIST',\n        current_playlist: playlist\n      });\n      dispatch({\n        type: 'SET_ALBUMS',\n        albums: null\n      });\n      dispatch({\n        type: 'SET_ARTISTS',\n        albums: null\n      });\n      dispatch({\n        type: 'SET_TRACKS',\n        tracks: null\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebarOption\",\n    children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"sidebarOption__icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this), Icon ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => {\n        changePlaylist(id);\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SidebarOption, \"IdhM3eYXGcHiEgwsxfsb2XobvQY=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = SidebarOption;\nexport default SidebarOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarOption\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SidebarOption.js"],"names":["React","useDataLayerValue","SidebarOption","spotify","title","Icon","id","dispatch","changePlaylist","getPlaylist","then","playlist","type","current_playlist","albums","tracks"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAO,4BAAP;;;AAGA,SAASC,aAAT,CAAuB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA;AAAvB,CAAvB,EAAmD;AAAA;;AACjD,QAAM,CAAC,EAAD,EAAKC,QAAL,IAAiBN,iBAAiB,EAAxC;;AAEA,QAAMO,cAAc,GAAIF,EAAD,IAAQ;AAC7BH,IAAAA,OAAO,CAACM,WAAR,CAAoBH,EAApB,EACCI,IADD,CACOC,QAAD,IAAc;AAClBJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,sBADC;AAEPC,QAAAA,gBAAgB,EAAEF;AAFX,OAAD,CAAR;AAIAJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,YADC;AAEPE,QAAAA,MAAM,EAAE;AAFD,OAAD,CAAR;AAIAP,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,aADC;AAEPE,QAAAA,MAAM,EAAE;AAFD,OAAD,CAAR;AAIAP,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,YADC;AAEPG,QAAAA,MAAM,EAAE;AAFD,OAAD,CAAR;AAID,KAlBD;AAmBD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGV,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADX,EAEGA,IAAI,gBAAG;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAsB;AAAG,MAAA,OAAO,EAAE,MAAM;AAACI,QAAAA,cAAc,CAACF,EAAD,CAAd;AAAmB,OAAtC;AAAA,gBAAyCF;AAAzC;AAAA;AAAA;AAAA;AAAA,YAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA/BQF,a;UACgBD,iB;;;KADhBC,a;AAiCT,eAAeA,aAAf","sourcesContent":["import React from \"react\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/SidebarOption.css\"\n\n\nfunction SidebarOption({spotify, title, Icon, id}) {\n  const [{}, dispatch] = useDataLayerValue();\n\n  const changePlaylist = (id) => {\n    spotify.getPlaylist(id)\n    .then((playlist) => {\n      dispatch({\n        type: 'SET_CURRENT_PLAYLIST', \n        current_playlist: playlist\n      })\n      dispatch({\n        type: 'SET_ALBUMS',\n        albums: null\n      });\n      dispatch({\n        type: 'SET_ARTISTS',\n        albums: null\n      });\n      dispatch({\n        type: 'SET_TRACKS',\n        tracks: null\n      });\n    })\n  }\n\n  return (\n    <div className=\"sidebarOption\">\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\n      {Icon ? <h4>{title}</h4> : <p onClick={() => {changePlaylist(id)}}>{title}</p>}\n    </div>\n  );\n}\n\nexport default SidebarOption;"]},"metadata":{},"sourceType":"module"}