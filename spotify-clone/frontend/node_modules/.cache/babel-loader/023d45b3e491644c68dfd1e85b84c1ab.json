{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./components/Login\";\nimport { getTokenFromUrl } from \"./components/spotify/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./contexts/DataLayer\";\nimport Player from \"./components/player/Player\";\nimport { authorizeInstagram, searchInstagram } from \"./components/instagram/instagram\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  console.log(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\n  const [{\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      console.log(\"[token]\", token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        // console.log(playlists);\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then(playlist => {\n        // console.log(playlist)\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist\n        });\n      });\n    }\n\n    authorizeInstagram().then(response => {\n      console.log(response);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [process.env.REACT_APP_SPOTIFY_CLIENT_ID, token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"VvoLkVsyndhTBJCVSbrCRx/YQrA=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/App.js"],"names":["React","useEffect","Login","getTokenFromUrl","SpotifyWebApi","useDataLayerValue","Player","authorizeInstagram","searchInstagram","spotify","App","console","log","process","env","REACT_APP_SPOTIFY_CLIENT_ID","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","user","getUserPlaylists","playlists","getPlaylist","playlist","discover_weekly","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,kCAApD;;AAEA,MAAMC,OAAO,GAAG,IAAIL,aAAJ,EAAhB;;AAEA,SAASM,GAAT,GAAe;AAAA;;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,2BAAxB;AACA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBZ,iBAAiB,EAA/C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,IAAI,GAAGf,eAAe,EAA5B;AACAgB,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACVJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAIAV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,KAAvB;AACAP,MAAAA,OAAO,CAACe,cAAR,CAAuBH,MAAvB;AACAZ,MAAAA,OAAO,CAACgB,KAAR,GAAgBC,IAAhB,CAAsBC,IAAD,IAAU;AAC7BV,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPI,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMAlB,MAAAA,OAAO,CAACmB,gBAAR,GACCF,IADD,CACOG,SAAD,IAAe;AACnB;AACAZ,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPM,UAAAA;AAFO,SAAD,CAAR;AAID,OAPD;AAQApB,MAAAA,OAAO,CAACqB,WAAR,CAAoB,wBAApB,EACCJ,IADD,CACOK,QAAD,IAAc;AAClB;AACAd,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,qBADC;AAEPS,UAAAA,eAAe,EAAED;AAFV,SAAD,CAAR;AAID,OAPD;AAQD;;AAEDxB,IAAAA,kBAAkB,GACjBmB,IADD,CACMO,QAAQ,IAAI;AAChBtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AACD,KAHD;AAKD,GAzCQ,EAyCN,EAzCM,CAAT;AA2CA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGpB,OAAO,CAACC,GAAR,CAAYC,2BADf,EAEGC,KAAK,gBAAG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAkC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAF1C;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMD;;GArDQC,G;UAEuBL,iB;;;KAFvBK,G;AAuDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./components/Login\"\nimport { getTokenFromUrl } from \"./components/spotify/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./contexts/DataLayer\";\nimport Player from \"./components/player/Player\";\nimport { authorizeInstagram, searchInstagram } from \"./components/instagram/instagram\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  console.log(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\n  const [{ token }, dispatch] = useDataLayerValue(); \n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; \n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      console.log(\"[token]\", token); \n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists()\n      .then((playlists) => {\n        // console.log(playlists);\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\")\n      .then((playlist) => {\n        // console.log(playlist)\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\", \n          discover_weekly: playlist, \n        });\n      });\n    }\n\n    authorizeInstagram()\n    .then(response => {\n      console.log(response);\n    });\n\n  }, []);\n\n  return (\n  <div className=\"app\">\n    {process.env.REACT_APP_SPOTIFY_CLIENT_ID}\n    {token ? <Player spotify={spotify} /> : <Login />}\n  </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}