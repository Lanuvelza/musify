{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/contexts/YoutubeDataLayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const YoutubeDataLayerContext = /*#__PURE__*/createContext();\nexport const YoutubeDataLayer = ({\n  initialState,\n  reducer,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(YoutubeDataLayerContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_s(YoutubeDataLayer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = YoutubeDataLayer;\nexport const useYoutubeDataLayerValue = () => {\n  _s2();\n\n  return useContext(YoutubeDataLayerContext);\n};\n\n_s2(useYoutubeDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeDataLayer\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/contexts/YoutubeDataLayer.js"],"names":["React","createContext","useContext","useReducer","YoutubeDataLayerContext","YoutubeDataLayer","initialState","reducer","children","useYoutubeDataLayerValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAEA,OAAO,MAAMC,uBAAuB,gBAAGH,aAAa,EAA7C;AAEP,OAAO,MAAMI,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAD;AAAA;;AAAA,sBAC9B,QAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAAnD;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UAD8B;AAAA,CAAzB;;GAAMH,gB;;KAAAA,gB;AAMb,OAAO,MAAMI,wBAAwB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,uBAAD,CAAhB;AAAA,CAAjC;;IAAMK,wB","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nexport const YoutubeDataLayerContext = createContext(); \n\nexport const YoutubeDataLayer = ({ initialState, reducer, children }) => (\n  <YoutubeDataLayerContext.Provider value={useReducer(reducer, initialState)} >\n    {children}\n  </YoutubeDataLayerContext.Provider>\n);\n\nexport const useYoutubeDataLayerValue = () => useContext(YoutubeDataLayerContext);\n"]},"metadata":{},"sourceType":"module"}