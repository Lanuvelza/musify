{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport \"./styles/SearchResults.css\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  avatar: {\n    height: '200px',\n    width: '200px',\n    boxShadow: '5px 8px 15px black'\n  }\n});\n\nfunction SearchResults({\n  artist,\n  spotify\n}) {\n  _s();\n\n  const [{}, dispatch] = useDataLayerValue();\n  const classes = useStyles();\n\n  const selectArtist = () => {\n    spotify.getArtistAlbums(artist.id, {\n      include_groups: [\"single\", \"album\"]\n    }).then(results => {\n      console.log(\"artist albums\", results);\n    }).then(() => {\n      spotify.getArtistTopTracks(artist.id, \"US\").then(results => {\n        console.log(\"artist tracks\", results);\n      });\n    }).then(() => {\n      dispatch({\n        type: \"SET_ARTIST\",\n        artist\n      });\n      dispatch({\n        type: \"SET_SEARCHING\",\n        searching: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results__itemBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results__itemAvatar\",\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: artist.images.length ? artist.images[0].url : null,\n        alt: artist.name,\n        className: classes.avatar,\n        onClick: selectArtist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results__itemInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, artist.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchResults, \"vbvz/44YFvZar5/FHjo/yOchGHA=\", false, function () {\n  return [useDataLayerValue, useStyles];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SearchResults.js"],"names":["React","Avatar","makeStyles","useDataLayerValue","useStyles","avatar","height","width","boxShadow","SearchResults","artist","spotify","dispatch","classes","selectArtist","getArtistAlbums","id","include_groups","then","results","console","log","getArtistTopTracks","type","searching","images","length","url","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAO,4BAAP;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,OADF;AAENC,IAAAA,KAAK,EAAE,OAFD;AAGNC,IAAAA,SAAS,EAAE;AAHL;AADmB,CAAD,CAA5B;;AAQA,SAASC,aAAT,CAAuB;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAvB,EAA0C;AAAA;;AACxC,QAAM,CAAC,EAAD,EAAKC,QAAL,IAAiBT,iBAAiB,EAAxC;AAEA,QAAMU,OAAO,GAAGT,SAAS,EAAzB;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzBH,IAAAA,OAAO,CAACI,eAAR,CAAwBL,MAAM,CAACM,EAA/B,EAAmC;AAAEC,MAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,OAAX;AAAlB,KAAnC,EACCC,IADD,CACOC,OAAD,IAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AACD,KAHD,EAICD,IAJD,CAIM,MAAM;AACVP,MAAAA,OAAO,CAACW,kBAAR,CAA2BZ,MAAM,CAACM,EAAlC,EAAsC,IAAtC,EACCE,IADD,CACOC,OAAD,IAAa;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AACD,OAHD;AAID,KATD,EAUCD,IAVD,CAUM,MAAM;AACVN,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,YADC;AAEPb,QAAAA;AAFO,OAAD,CAAR;AAIAE,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,eADC;AAEPC,QAAAA,SAAS,EAAE;AAFJ,OAAD,CAAR;AAID,KAnBD;AAoBD,GArBD;;AAuBA,sBACE;AAAqB,IAAA,SAAS,EAAC,mBAA/B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,GAAG,EAAEd,MAAM,CAACe,MAAP,CAAcC,MAAd,GAAuBhB,MAAM,CAACe,MAAP,CAAc,CAAd,EAAiBE,GAAxC,GAA8C,IADrD;AAEE,QAAA,GAAG,EAAEjB,MAAM,CAACkB,IAFd;AAGE,QAAA,SAAS,EAAEf,OAAO,CAACR,MAHrB;AAIE,QAAA,OAAO,EAAES;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AAAA,kBAAIJ,MAAM,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,KAAUlB,MAAM,CAACM,EAAjB;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3CQP,a;UACgBN,iB,EAEPC,S;;;KAHTK,a;AA6CT,eAAeA,aAAf","sourcesContent":["import React from 'react'; \nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport \"./styles/SearchResults.css\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    height: '200px',\n    width: '200px',\n    boxShadow: '5px 8px 15px black',\n  }\n})\n\nfunction SearchResults({artist, spotify}) {\n  const [{}, dispatch] = useDataLayerValue();\n\n  const classes = useStyles();\n\n  const selectArtist = () => {\n    spotify.getArtistAlbums(artist.id, { include_groups: [\"single\", \"album\"] })\n    .then((results) => {\n      console.log(\"artist albums\", results); \n    })\n    .then(() => {\n      spotify.getArtistTopTracks(artist.id, \"US\")\n      .then((results) => {\n        console.log(\"artist tracks\", results);\n      })\n    })\n    .then(() => {\n      dispatch({\n        type: \"SET_ARTIST\",\n        artist\n      })\n      dispatch({\n        type: \"SET_SEARCHING\",\n        searching: false\n      })\n    });\n  }\n\n  return (\n    <div key={artist.id} className=\"results__itemBody\">\n      <div className=\"results__itemAvatar\">\n        <Avatar \n          src={artist.images.length ? artist.images[0].url : null} \n          alt={artist.name} \n          className={classes.avatar}\n          onClick={selectArtist}\n        />\n      </div>\n    <div className=\"results__itemInfo\">\n      <p>{artist.name}</p>\n    </div>\n  </div>\n  )\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}