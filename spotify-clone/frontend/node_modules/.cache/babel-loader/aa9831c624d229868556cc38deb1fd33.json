{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelVideoItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useYoutubeDataLayerValue } from '../../contexts/YoutubeDataLayer';\nimport \"./styles/ChannelVideoItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChannelVideoItem({\n  video\n}) {\n  _s();\n\n  var _video$snippet, _video$snippet$thumbn, _video$snippet$thumbn2, _video$snippet2, _video$snippet3;\n\n  const [{}, youtubeDispatch] = useYoutubeDataLayerValue();\n\n  const selectVideo = () => {\n    youtubeDispatch({\n      type: \"SET_VIDEO\",\n      video: video\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoitem__body\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: video === null || video === void 0 ? void 0 : (_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : (_video$snippet$thumbn = _video$snippet.thumbnails) === null || _video$snippet$thumbn === void 0 ? void 0 : (_video$snippet$thumbn2 = _video$snippet$thumbn.high) === null || _video$snippet$thumbn2 === void 0 ? void 0 : _video$snippet$thumbn2.url,\n      alt: video === null || video === void 0 ? void 0 : (_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : _video$snippet2.titel,\n      onClick: selectVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: video === null || video === void 0 ? void 0 : (_video$snippet3 = video.snippet) === null || _video$snippet3 === void 0 ? void 0 : _video$snippet3.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ChannelVideoItem, \"YDDSnLRQGtaqwyTGn/noOlVCZkE=\", false, function () {\n  return [useYoutubeDataLayerValue];\n});\n\n_c = ChannelVideoItem;\nexport default ChannelVideoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelVideoItem\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/frontend/src/components/youtube-components/ChannelVideoItem.js"],"names":["React","useYoutubeDataLayerValue","ChannelVideoItem","video","youtubeDispatch","selectVideo","type","snippet","thumbnails","high","url","titel","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,iCAAzC;AACA,OAAO,+BAAP;;;AAGA,SAASC,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAmC;AAAA;;AAAA;;AACjC,QAAM,CAAC,EAAD,EAAKC,eAAL,IAAuBH,wBAAwB,EAArD;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBD,IAAAA,eAAe,CAAC;AACdE,MAAAA,IAAI,EAAE,WADQ;AAEdH,MAAAA,KAAK,EAAEA;AAFO,KAAD,CAAf;AAID,GALD;;AAOA,sBACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AACE,MAAA,GAAG,EAAEA,KAAF,aAAEA,KAAF,yCAAEA,KAAK,CAAEI,OAAT,4EAAE,eAAgBC,UAAlB,oFAAE,sBAA4BC,IAA9B,2DAAE,uBAAkCC,GADzC;AAEE,MAAA,GAAG,EAAEP,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEI,OAAT,oDAAE,gBAAgBI,KAFvB;AAGE,MAAA,OAAO,EAAEN;AAHX;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBAAKF,KAAL,aAAKA,KAAL,0CAAKA,KAAK,CAAEI,OAAZ,oDAAK,gBAAgBK;AAArB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUD;;GApBQV,gB;UACsBD,wB;;;KADtBC,gB;AAsBT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { useYoutubeDataLayerValue } from '../../contexts/YoutubeDataLayer';\nimport \"./styles/ChannelVideoItem.css\";\n\n\nfunction ChannelVideoItem({video}) {\n  const [{}, youtubeDispatch] =useYoutubeDataLayerValue();\n\n  const selectVideo = () => {\n    youtubeDispatch({\n      type: \"SET_VIDEO\",\n      video: video\n    })\n  }\n\n  return (\n  <div className=\"videoitem__body\">\n    <img \n      src={video?.snippet?.thumbnails?.high?.url} \n      alt={video?.snippet?.titel} \n      onClick={selectVideo}\n    />\n    <h3>{video?.snippet?.title}</h3>\n  </div>\n  )\n}\n\nexport default ChannelVideoItem;"]},"metadata":{},"sourceType":"module"}