{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Body.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles/Body.css\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body({\n  spotify\n}) {\n  _s();\n\n  var _playlists$items$, _playlists$items$$ima, _playlists$items$2, _playlists$items$3, _playlists$items$4;\n\n  const [{\n    discover_weekly,\n    playlists\n  }, dispatch] = useDataLayerValue(); // console.log(playlists);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: playlists === null || playlists === void 0 ? void 0 : (_playlists$items$ = playlists.items[0]) === null || _playlists$items$ === void 0 ? void 0 : (_playlists$items$$ima = _playlists$items$.images[0]) === null || _playlists$items$$ima === void 0 ? void 0 : _playlists$items$$ima.url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__infoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: playlists === null || playlists === void 0 ? void 0 : (_playlists$items$2 = playlists.items[0]) === null || _playlists$items$2 === void 0 ? void 0 : _playlists$items$2.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlists === null || playlists === void 0 ? void 0 : (_playlists$items$3 = playlists.items[0]) === null || _playlists$items$3 === void 0 ? void 0 : _playlists$items$3.display_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: playlists === null || playlists === void 0 ? void 0 : (_playlists$items$4 = playlists.items[0]) === null || _playlists$items$4 === void 0 ? void 0 : _playlists$items$4.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__icons\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n          className: \"body__shuffle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Favorite, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHoriz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.tracks.items.map(item => /*#__PURE__*/_jsxDEV(SongRow, {\n        track: item.track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"TtPF/I3jXeMKM3yP54DD2aj5O+s=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Body.js"],"names":["React","PlayCircleFilled","Favorite","MoreHoriz","useDataLayerValue","Header","SongRow","Body","spotify","discover_weekly","playlists","dispatch","items","images","url","name","display_name","description","tracks","map","item","track"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,oBAAtD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAyB;AAAA;;AAAA;;AACvB,QAAM,CAAC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAD,EAAiCC,QAAjC,IAA6CP,iBAAiB,EAApE,CADuB,CAEvB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEE;AAAK,QAAA,GAAG,EAAIE,SAAJ,aAAIA,SAAJ,4CAAIA,SAAS,CAAEE,KAAX,CAAiB,CAAjB,CAAJ,+EAAI,kBAAqBC,MAArB,CAA4B,CAA5B,CAAJ,0DAAI,sBAAgCC,GAA5C;AAAiD,QAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCAIE;AAAA,oBAASJ,SAAT,aAASA,SAAT,6CAASA,SAAS,CAAEE,KAAX,CAAiB,CAAjB,CAAT,uDAAS,mBAAqBG;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAKL,SAAL,aAAKA,SAAL,6CAAKA,SAAS,CAAEE,KAAX,CAAiB,CAAjB,CAAL,uDAAK,mBAAqBI;AAA1B;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAIN,SAAJ,aAAIA,SAAJ,6CAAIA,SAAS,CAAEE,KAAX,CAAiB,CAAjB,CAAJ,uDAAI,mBAAqBK;AAAzB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,gBAAD;AAAkB,UAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMGR,eANH,aAMGA,eANH,uBAMGA,eAAe,CAAES,MAAjB,CAAwBN,KAAxB,CAA8BO,GAA9B,CAAmCC,IAAD,iBACjC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,IAAI,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA,cADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA/BQd,I;UAC4CH,iB;;;KAD5CG,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React from \"react\"; \nimport \"./styles/Body.css\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\n\nfunction Body({spotify}) {\n  const [{ discover_weekly, playlists }, dispatch] = useDataLayerValue();\n  // console.log(playlists);\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} /> \n      <div className=\"body__info\">\n        {/* <img src = {discover_weekly?.images[0]?.url} alt=\"\" /> */}\n        <img src = {playlists?.items[0]?.images[0]?.url} alt=\"\" />\n        <div className=\"body__infoText\">\n          {/* <strong>PLAYLIST</strong>\n          <h2>Discover Weekly</h2> */}\n          {/* <p>{discover_weekly?.description}</p> */}\n          <strong>{playlists?.items[0]?.name}</strong>\n          <h2>{playlists?.items[0]?.display_name}</h2>\n          <p>{playlists?.items[0]?.description}</p>\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilled className=\"body__shuffle\" />\n          <Favorite fontSize=\"large\" />\n          <MoreHoriz />\n        </div>\n        {discover_weekly?.tracks.items.map((item) => (\n          <SongRow track={item.track} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}