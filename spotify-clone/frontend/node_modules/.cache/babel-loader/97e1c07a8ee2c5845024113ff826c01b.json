{"ast":null,"code":"'use strict';\n\nexports.addon = function (renderer, config) {\n  if (process.env.NODE_ENV !== 'production') {\n    require('./__dev__/warnOnMissingDependencies')('keyframes', renderer, ['putRaw', 'put']);\n  }\n\n  config = renderer.assign({\n    prefixes: ['-webkit-', '-moz-', '-o-', '']\n  }, config || {});\n  var prefixes = config.prefixes;\n\n  if (renderer.client) {\n    // Craete @keyframe Stylesheet `ksh`.\n    document.head.appendChild(renderer.ksh = document.createElement('style'));\n  }\n\n  var putAt = renderer.putAt;\n\n  renderer.putAt = function (__, keyframes, prelude) {\n    // @keyframes\n    if (prelude[1] === 'k') {\n      var str = '';\n\n      for (var keyframe in keyframes) {\n        var decls = keyframes[keyframe];\n        var strDecls = '';\n\n        for (var prop in decls) strDecls += renderer.decl(prop, decls[prop]);\n\n        str += keyframe + '{' + strDecls + '}';\n      }\n\n      for (var i = 0; i < prefixes.length; i++) {\n        var prefix = prefixes[i];\n        var rawKeyframes = prelude.replace('@keyframes', '@' + prefix + 'keyframes') + '{' + str + '}';\n\n        if (renderer.client) {\n          renderer.ksh.appendChild(document.createTextNode(rawKeyframes));\n        } else {\n          renderer.putRaw(rawKeyframes);\n        }\n      }\n\n      return;\n    }\n\n    putAt(__, keyframes, prelude);\n  };\n\n  renderer.keyframes = function (keyframes, block) {\n    if (!block) block = renderer.hash(keyframes);\n    block = renderer.pfx + block;\n    renderer.putAt('', keyframes, '@keyframes ' + block);\n    return block;\n  };\n};","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/node_modules/nano-css/addon/keyframes.js"],"names":["exports","addon","renderer","config","process","env","NODE_ENV","require","assign","prefixes","client","document","head","appendChild","ksh","createElement","putAt","__","keyframes","prelude","str","keyframe","decls","strDecls","prop","decl","i","length","prefix","rawKeyframes","replace","createTextNode","putRaw","block","hash","pfx"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,KAAR,GAAgB,UAAUC,QAAV,EAAoBC,MAApB,EAA4B;AACxC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCC,IAAAA,OAAO,CAAC,qCAAD,CAAP,CAA+C,WAA/C,EAA4DL,QAA5D,EAAsE,CAAC,QAAD,EAAW,KAAX,CAAtE;AACH;;AAEDC,EAAAA,MAAM,GAAGD,QAAQ,CAACM,MAAT,CAAgB;AACrBC,IAAAA,QAAQ,EAAE,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,EAA6B,EAA7B;AADW,GAAhB,EAENN,MAAM,IAAI,EAFJ,CAAT;AAIA,MAAIM,QAAQ,GAAGN,MAAM,CAACM,QAAtB;;AAEA,MAAIP,QAAQ,CAACQ,MAAb,EAAqB;AACjB;AACAC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BX,QAAQ,CAACY,GAAT,GAAeH,QAAQ,CAACI,aAAT,CAAuB,OAAvB,CAAzC;AACH;;AAED,MAAIC,KAAK,GAAGd,QAAQ,CAACc,KAArB;;AAEAd,EAAAA,QAAQ,CAACc,KAAT,GAAiB,UAAUC,EAAV,EAAcC,SAAd,EAAyBC,OAAzB,EAAkC;AAC/C;AACA,QAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACpB,UAAIC,GAAG,GAAG,EAAV;;AAEA,WAAK,IAAIC,QAAT,IAAqBH,SAArB,EAAgC;AAC5B,YAAII,KAAK,GAAGJ,SAAS,CAACG,QAAD,CAArB;AACA,YAAIE,QAAQ,GAAG,EAAf;;AAEA,aAAK,IAAIC,IAAT,IAAiBF,KAAjB,EACIC,QAAQ,IAAIrB,QAAQ,CAACuB,IAAT,CAAcD,IAAd,EAAoBF,KAAK,CAACE,IAAD,CAAzB,CAAZ;;AAEJJ,QAAAA,GAAG,IAAIC,QAAQ,GAAG,GAAX,GAAiBE,QAAjB,GAA4B,GAAnC;AACH;;AAED,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,QAAQ,CAACkB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,YAAIE,MAAM,GAAGnB,QAAQ,CAACiB,CAAD,CAArB;AACA,YAAIG,YAAY,GAAGV,OAAO,CAACW,OAAR,CAAgB,YAAhB,EAA8B,MAAMF,MAAN,GAAe,WAA7C,IAA4D,GAA5D,GAAkER,GAAlE,GAAwE,GAA3F;;AAEA,YAAIlB,QAAQ,CAACQ,MAAb,EAAqB;AACjBR,UAAAA,QAAQ,CAACY,GAAT,CAAaD,WAAb,CAAyBF,QAAQ,CAACoB,cAAT,CAAwBF,YAAxB,CAAzB;AACH,SAFD,MAEO;AACH3B,UAAAA,QAAQ,CAAC8B,MAAT,CAAgBH,YAAhB;AACH;AACJ;;AAED;AACH;;AAEDb,IAAAA,KAAK,CAACC,EAAD,EAAKC,SAAL,EAAgBC,OAAhB,CAAL;AACH,GA9BD;;AAgCAjB,EAAAA,QAAQ,CAACgB,SAAT,GAAqB,UAAUA,SAAV,EAAqBe,KAArB,EAA4B;AAC7C,QAAI,CAACA,KAAL,EAAYA,KAAK,GAAG/B,QAAQ,CAACgC,IAAT,CAAchB,SAAd,CAAR;AACZe,IAAAA,KAAK,GAAG/B,QAAQ,CAACiC,GAAT,GAAeF,KAAvB;AAEA/B,IAAAA,QAAQ,CAACc,KAAT,CAAe,EAAf,EAAmBE,SAAnB,EAA8B,gBAAgBe,KAA9C;AAEA,WAAOA,KAAP;AACH,GAPD;AAQH,CA1DD","sourcesContent":["'use strict';\n\nexports.addon = function (renderer, config) {\n    if (process.env.NODE_ENV !== 'production') {\n        require('./__dev__/warnOnMissingDependencies')('keyframes', renderer, ['putRaw', 'put']);\n    }\n\n    config = renderer.assign({\n        prefixes: ['-webkit-', '-moz-', '-o-', ''],\n    }, config || {});\n\n    var prefixes = config.prefixes;\n\n    if (renderer.client) {\n        // Craete @keyframe Stylesheet `ksh`.\n        document.head.appendChild(renderer.ksh = document.createElement('style'));\n    }\n\n    var putAt = renderer.putAt;\n\n    renderer.putAt = function (__, keyframes, prelude) {\n        // @keyframes\n        if (prelude[1] === 'k') {\n            var str = '';\n\n            for (var keyframe in keyframes) {\n                var decls = keyframes[keyframe];\n                var strDecls = '';\n\n                for (var prop in decls)\n                    strDecls += renderer.decl(prop, decls[prop]);\n\n                str += keyframe + '{' + strDecls + '}';\n            }\n\n            for (var i = 0; i < prefixes.length; i++) {\n                var prefix = prefixes[i];\n                var rawKeyframes = prelude.replace('@keyframes', '@' + prefix + 'keyframes') + '{' + str + '}';\n\n                if (renderer.client) {\n                    renderer.ksh.appendChild(document.createTextNode(rawKeyframes));\n                } else {\n                    renderer.putRaw(rawKeyframes);\n                }\n            }\n\n            return;\n        }\n\n        putAt(__, keyframes, prelude);\n    };\n\n    renderer.keyframes = function (keyframes, block) {\n        if (!block) block = renderer.hash(keyframes);\n        block = renderer.pfx + block;\n\n        renderer.putAt('', keyframes, '@keyframes ' + block);\n\n        return block;\n    };\n};\n"]},"metadata":{},"sourceType":"script"}