{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Search } from \"@material-ui/icons\";\nimport \"./styles/Header.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header({\n  spotify\n}) {\n  _s();\n\n  var _user$images$;\n\n  const [{\n    user\n  }, dispatch] = useDataLayerValue();\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    spotify.searchTracks(search).then(results => {\n      console.log(results.tracks);\n      setSearch(\"\");\n      dispatch({\n        type: \"SET_TRACKS\",\n        tracks: results.tracks\n      });\n    });\n    spotify.searchArtists(search).then(results => {\n      console.log(results.artists);\n      setSearch(\"\");\n      dispatch({\n        type: \"SET_ARTISTS\",\n        artists: results.artists\n      });\n    });\n    spotify.searchAlbums(search).then(results => {\n      console.log(results.albums);\n      setSearch(\"\");\n      dispatch({\n        type: \"SET_ALBUMS\",\n        albums: results.albums\n      });\n    });\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__left\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for Artists, Songs, or Albums\",\n        type: \"text\",\n        onChange: e => {\n          setSearch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__right\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: user === null || user === void 0 ? void 0 : (_user$images$ = user.images[0]) === null || _user$images$ === void 0 ? void 0 : _user$images$.url,\n        alt: user === null || user === void 0 ? void 0 : user.display_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: user === null || user === void 0 ? void 0 : user.display_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"UcWam4r11II/7AZJv7LuS7Iz8Xw=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Header.js"],"names":["React","useEffect","useState","Search","Avatar","useDataLayerValue","Header","spotify","user","dispatch","search","setSearch","searchTracks","then","results","console","log","tracks","type","searchArtists","artists","searchAlbums","albums","e","target","value","images","url","display_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAO,qBAAP;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;;AAGA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA6B;AAAA;;AAAA;;AAC3B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAWC,QAAX,IAAuBJ,iBAAiB,EAA9C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEdM,IAAAA,OAAO,CAACK,YAAR,CAAqBF,MAArB,EACCG,IADD,CACOC,OAAD,IAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,MAApB;AACAN,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,YADC;AAEPD,QAAAA,MAAM,EAAEH,OAAO,CAACG;AAFT,OAAD,CAAR;AAID,KARD;AAUAV,IAAAA,OAAO,CAACY,aAAR,CAAsBT,MAAtB,EACCG,IADD,CACOC,OAAD,IAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACM,OAApB;AACAT,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,aADC;AAEPE,QAAAA,OAAO,EAAEN,OAAO,CAACM;AAFV,OAAD,CAAR;AAID,KARD;AAUAb,IAAAA,OAAO,CAACc,YAAR,CAAqBX,MAArB,EACCG,IADD,CACOC,OAAD,IAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACQ,MAApB;AACAX,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,YADC;AAEPI,QAAAA,MAAM,EAAER,OAAO,CAACQ;AAFT,OAAD,CAAR;AAID,KARD;AASD,GA/BQ,EA+BN,CAACZ,MAAD,CA/BM,CAAT;AAiCA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,WAAW,EAAC,sCAAnB;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAsE,QAAA,QAAQ,EAAGa,CAAD,IAAO;AAACZ,UAAAA,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA0B;AAAlH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEjB,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAEkB,MAAN,CAAa,CAAb,CAAF,kDAAE,cAAiBC,GAA9B;AAAmC,QAAA,GAAG,EAAEnB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEoB;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKpB,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEoB;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjDQtB,M;UACsBD,iB;;;KADtBC,M;AAkDT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"; \nimport { Search } from \"@material-ui/icons\"; \nimport \"./styles/Header.css\";\nimport { Avatar } from \"@material-ui/core\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\n\n\nfunction Header({ spotify }) {\n  const [{ user }, dispatch] = useDataLayerValue(); \n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n\n    spotify.searchTracks(search)\n    .then((results) => {\n      console.log(results.tracks);\n      setSearch(\"\");\n      dispatch({\n        type: \"SET_TRACKS\",\n        tracks: results.tracks\n      });\n    });\n\n    spotify.searchArtists(search)\n    .then((results) => {\n      console.log(results.artists);\n      setSearch(\"\");\n      dispatch({\n        type: \"SET_ARTISTS\",\n        artists: results.artists\n      });\n    });\n\n    spotify.searchAlbums(search)\n    .then((results) => {\n      console.log(results.albums);\n      setSearch(\"\");\n      dispatch({\n        type: \"SET_ALBUMS\",\n        albums: results.albums\n      });\n    });\n  }, [search])\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <Search />\n        <input placeholder=\"Search for Artists, Songs, or Albums\" type=\"text\" onChange={(e) => {setSearch(e.target.value)}}/>\n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\nexport default Header;"]},"metadata":{},"sourceType":"module"}