{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/contexts/ViewDataLayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewDataLayerContext = /*#__PURE__*/createContext();\nexport const ViewDataLayer = ({\n  initialState,\n  reducer,\n  children\n}) => {\n  _s();\n\n  /*#__PURE__*/\n  _jsxDEV(ViewDataLayerContext.Provider, {\n    values: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ViewDataLayer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = ViewDataLayer;\nexport const useViewDataLayerValue = () => {\n  _s2();\n\n  return useContext(ViewDataLayerContext);\n};\n\n_s2(useViewDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDataLayer\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/contexts/ViewDataLayer.js"],"names":["React","createContext","useContext","useReducer","ViewDataLayerContext","ViewDataLayer","initialState","reducer","children","useViewDataLayerValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAEA,OAAO,MAAMC,oBAAoB,gBAAGH,aAAa,EAA1C;AAEP,OAAO,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AAAA;;AACpE;AAAA,UAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,MAAM,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAAjD;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA;AAGD,CAJM;;GAAMH,a;;KAAAA,a;AAMb,OAAO,MAAMI,qBAAqB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,oBAAD,CAAhB;AAAA,CAA9B;;IAAMK,qB","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react'; \n\nexport const ViewDataLayerContext = createContext(); \n\nexport const ViewDataLayer = ({ initialState, reducer, children }) => {\n  <ViewDataLayerContext.Provider values={useReducer(reducer, initialState)}>\n    {children}\n  </ViewDataLayerContext.Provider>\n}; \n\nexport const useViewDataLayerValue = () => useContext(ViewDataLayerContext);"]},"metadata":{},"sourceType":"module"}