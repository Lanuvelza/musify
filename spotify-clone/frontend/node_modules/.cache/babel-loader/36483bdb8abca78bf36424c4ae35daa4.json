{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport \"./styles/SearchResults.css\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  avatar: {\n    height: '200px',\n    width: '200px',\n    boxShadow: '5px 8px 15px black'\n  }\n});\n\nconst filterAblumsByMarket = function (albums, country) {\n  const filteredAlbums = [];\n\n  for (const album of albums) {\n    if (album.available_markets.includes(country)) {\n      filteredAlbums.push(album);\n    }\n  }\n\n  return filteredAlbums;\n};\n\nfunction SearchResults({\n  artist,\n  spotify\n}) {\n  _s();\n\n  const [{}, dispatch] = useDataLayerValue();\n  const classes = useStyles();\n\n  const selectArtist = () => {\n    spotify.getArtistAlbums(artist.id).then(results => {\n      const albums = filterAblumsByMarket(results.items, \"US\");\n      console.log(albums);\n      dispatch({\n        type: \"SET_ALBUMS\",\n        albums: results\n      });\n    }).then(() => {\n      spotify.getArtistTopTracks(artist.id, \"US\").then(results => {\n        dispatch({\n          type: \"SET_TRACKS\",\n          tracks: results.tracks\n        });\n      });\n    }).then(() => {\n      dispatch({\n        type: \"SET_ARTIST\",\n        artist\n      });\n      dispatch({\n        type: \"SET_SEARCHING\",\n        searching: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results__itemBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results__itemAvatar\",\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: artist.images.length ? artist.images[0].url : null,\n        alt: artist.name,\n        className: classes.avatar,\n        onClick: selectArtist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results__itemInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, artist.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchResults, \"vbvz/44YFvZar5/FHjo/yOchGHA=\", false, function () {\n  return [useDataLayerValue, useStyles];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SearchResults.js"],"names":["React","Avatar","makeStyles","useDataLayerValue","useStyles","avatar","height","width","boxShadow","filterAblumsByMarket","albums","country","filteredAlbums","album","available_markets","includes","push","SearchResults","artist","spotify","dispatch","classes","selectArtist","getArtistAlbums","id","then","results","items","console","log","type","getArtistTopTracks","tracks","searching","images","length","url","name"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport \"./styles/SearchResults.css\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    height: '200px',\n    width: '200px',\n    boxShadow: '5px 8px 15px black',\n  }\n})\n\nconst filterAblumsByMarket = function(albums, country) {\n  const filteredAlbums = [];\n  for(const album of albums) {\n    if(album.available_markets.includes(country)) {\n      filteredAlbums.push(album);\n    }\n  }\n  return filteredAlbums; \n}\n\nfunction SearchResults({artist, spotify}) {\n  const [{}, dispatch] = useDataLayerValue();\n\n  const classes = useStyles();\n\n  const selectArtist = () => {\n    spotify.getArtistAlbums(artist.id)\n    .then((results) => {\n\n      const albums = filterAblumsByMarket(results.items, \"US\");\n      console.log(albums);\n\n\n      dispatch({\n        type: \"SET_ALBUMS\", \n        albums: results\n      })\n    })\n    .then(() => {\n      spotify.getArtistTopTracks(artist.id, \"US\")\n      .then((results) => {\n        dispatch({\n          type: \"SET_TRACKS\", \n          tracks: results.tracks\n        })\n      })\n    })\n    .then(() => {\n      dispatch({\n        type: \"SET_ARTIST\",\n        artist\n      })\n\n      dispatch({\n        type: \"SET_SEARCHING\",\n        searching: false\n      })\n    });\n  }\n\n  return (\n    <div key={artist.id} className=\"results__itemBody\">\n      <div className=\"results__itemAvatar\">\n        <Avatar \n          src={artist.images.length ? artist.images[0].url : null} \n          alt={artist.name} \n          className={classes.avatar}\n          onClick={selectArtist}\n        />\n      </div>\n    <div className=\"results__itemInfo\">\n      <p>{artist.name}</p>\n    </div>\n  </div>\n  )\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}