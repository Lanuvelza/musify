{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./components/Login\";\nimport { getTokenFromUrl } from \"./components/spotify/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\"; // import Instagram from 'instagram-web-api';\n\nimport { useDataLayerValue } from \"./contexts/DataLayer\";\nimport Player from \"./components/player/Player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      console.log(\"[token]\", token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        // console.log(playlists);\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then(playlist => {\n        // console.log(playlist)\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"VvoLkVsyndhTBJCVSbrCRx/YQrA=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/App.js"],"names":["React","useEffect","Login","getTokenFromUrl","SpotifyWebApi","useDataLayerValue","Player","spotify","App","token","dispatch","hash","window","location","_token","access_token","type","console","log","setAccessToken","getMe","then","user","getUserPlaylists","playlists","getPlaylist","playlist","discover_weekly"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CACA;;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,OAAO,GAAG,IAAIH,aAAJ,EAAhB;;AAEA,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBL,iBAAiB,EAA/C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,IAAI,GAAGR,eAAe,EAA5B;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACVJ,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,WADC;AAEPP,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,KAAvB;AACAF,MAAAA,OAAO,CAACY,cAAR,CAAuBL,MAAvB;AACAP,MAAAA,OAAO,CAACa,KAAR,GAAgBC,IAAhB,CAAsBC,IAAD,IAAU;AAC7BZ,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,UADC;AAEPM,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMAf,MAAAA,OAAO,CAACgB,gBAAR,GACCF,IADD,CACOG,SAAD,IAAe;AACnB;AACAd,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,eADC;AAEPQ,UAAAA;AAFO,SAAD,CAAR;AAID,OAPD;AAQAjB,MAAAA,OAAO,CAACkB,WAAR,CAAoB,wBAApB,EACCJ,IADD,CACOK,QAAD,IAAc;AAClB;AACAhB,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE,qBADC;AAEPW,UAAAA,eAAe,EAAED;AAFV,SAAD,CAAR;AAID,OAPD;AAQD;AAEF,GApCQ,EAoCN,EApCM,CAAT;AAsCA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGjB,KAAK,gBAAG,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAkC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAD1C;AAAA;AAAA;AAAA;AAAA,UADA;AAKD;;GA9CQC,G;UACuBH,iB;;;KADvBG,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport './App.css';\nimport Login from \"./components/Login\"\nimport { getTokenFromUrl } from \"./components/spotify/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n// import Instagram from 'instagram-web-api';\nimport { useDataLayerValue } from \"./contexts/DataLayer\";\nimport Player from \"./components/player/Player\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useDataLayerValue(); \n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; \n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      console.log(\"[token]\", token); \n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists()\n      .then((playlists) => {\n        // console.log(playlists);\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\")\n      .then((playlist) => {\n        // console.log(playlist)\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\", \n          discover_weekly: playlist, \n        });\n      });\n    }\n\n  }, []);\n\n  return (\n  <div className=\"app\">\n    {token ? <Player spotify={spotify} /> : <Login />}\n  </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}