{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Body.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles/Body.css\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\nimport LatestAlbum from \"./LatestAlbum\";\nimport Artist from \"./Artist\";\nimport SearchResults from \"./SearchResults\";\nimport AlbumsLibrary from \"./AlbumsLibrary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body({\n  spotify\n}) {\n  _s();\n\n  var _artists$items, _albums$items;\n\n  const [{\n    discover_weekly,\n    playlists,\n    current_playlist,\n    albums,\n    tracks,\n    artists,\n    artist,\n    searching\n  }, dispatch] = useDataLayerValue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), searching && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResults__body\",\n      children: artists === null || artists === void 0 ? void 0 : (_artists$items = artists.items) === null || _artists$items === void 0 ? void 0 : _artists$items.map(item => /*#__PURE__*/_jsxDEV(SearchResults, {\n        artist: item,\n        spotify: spotify\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__artistInfo\",\n        children: [artist && /*#__PURE__*/_jsxDEV(Artist, {\n          artist: artist,\n          albums: albums,\n          spotify: spotify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 22\n        }, this), albums && /*#__PURE__*/_jsxDEV(LatestAlbum, {\n          spotify: spotify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__infoText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__icons\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n          className: \"body__shuffle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Favorite, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHoriz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), tracks && tracks.map(track => /*#__PURE__*/_jsxDEV(SongRow, {\n        track: track\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), albums && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__albums\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__albumsDisplay\",\n        children: albums === null || albums === void 0 ? void 0 : (_albums$items = albums.items) === null || _albums$items === void 0 ? void 0 : _albums$items.map(album => /*#__PURE__*/_jsxDEV(Albums, {\n          album: album,\n          spotify: spotify\n        }, album.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"sC4323RYEYz+UVGnEpmi5mKZgjY=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Body.js"],"names":["React","PlayCircleFilled","Favorite","MoreHoriz","useDataLayerValue","Header","SongRow","LatestAlbum","Artist","SearchResults","AlbumsLibrary","Body","spotify","discover_weekly","playlists","current_playlist","albums","tracks","artists","artist","searching","dispatch","items","map","item","id","track","album"],"mappings":"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","sourcesContent":["import React from \"react\"; \nimport \"./styles/Body.css\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\nimport LatestAlbum from \"./LatestAlbum\";\nimport Artist from \"./Artist\";\nimport SearchResults from \"./SearchResults\";\nimport AlbumsLibrary from \"./AlbumsLibrary\";\n\nfunction Body({spotify}) {\n  const [{ discover_weekly, playlists, current_playlist, albums, tracks, artists, artist, searching }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} />\n      {searching && \n      <div className=\"searchResults__body\">\n        {artists?.items?.map((item) => (\n        <SearchResults artist={item} key={item.id} spotify={spotify}/>\n      ))}\n      </div>}\n      <div className=\"body__info\">\n        <div className=\"body__artistInfo\">\n          {artist && <Artist artist={artist} albums={albums} spotify={spotify} />}\n          {albums && <LatestAlbum spotify={spotify} /> }\n          {/* {albums ? <LatestAlbum spotify={spotify}/>\n          : \n          (current_playlist ? \n          <img src = {playlists.items ? playlists.items[0].images[0].url : null} alt=\"\" /> :\n          <img src = {discover_weekly?.images[0]?.url} alt=\"\" /> )} */}\n        </div>\n        <div className=\"body__infoText\">\n          {/* {albums ? null :\n          \n          (current_playlist ? \n          <>\n            <strong>PLAYLIST</strong>\n            <h2>{current_playlist.name}</h2> \n            <p>{current_playlist.description}</p>\n          </> :\n          <>\n            <strong>PLAYLIST</strong>\n            <h2>Discover Weekly</h2>\n            <p>{discover_weekly?.description}</p>\n          </>\n          )\n          } */}\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilled className=\"body__shuffle\" />\n          <Favorite fontSize=\"large\" />\n          <MoreHoriz />\n        </div>\n        {tracks && tracks.map((track) => (\n          <SongRow track={track} key={track.id} />\n        ))}\n        {/* {tracks ? tracks.map((track) => (\n          <SongRow track={track} key={track.id} />\n        )): \n        (current_playlist ? \n          current_playlist.tracks.items.map((item) => (\n            <SongRow track={item.track} key={item.track.id}/>\n          )) : \n          discover_weekly?.tracks.items.map((item) => (\n            <SongRow track={item.track} key={item.track.id} />\n          )))} */}\n      </div>\n      {albums && \n      <div className=\"body__albums\">\n        <h1>Albums</h1>\n        <div className=\"body__albumsDisplay\">\n           {albums?.items?.map((album) => (\n           <Albums album={album} key={album.id} spotify={spotify} />\n          ))}\n        </div>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}