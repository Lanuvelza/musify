{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SongRow.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/SongRow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongRow({\n  track\n}) {\n  _s();\n\n  const [{\n    album\n  }, dispatch] = useDataLayerValue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"songRow\",\n    children: [track.album.images ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: track.album.images[0].url,\n      alt: \"\",\n      className: \"songRow__album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: album.images[0].url,\n      alt: \"\",\n      className: \"songRow__album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songRow__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [track.artists.map(artist => artist.name).join(\", \"), \" -\", \" \", track.album.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SongRow, \"QNqGQNiDmHIQRNlrS9jejJEK5X0=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = SongRow;\nexport default SongRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongRow\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/SongRow.js"],"names":["React","useDataLayerValue","SongRow","track","album","dispatch","images","url","name","artists","map","artist","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAO,sBAAP;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AAAA;;AAC1B,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAUC,QAAV,IAAsBJ,iBAAiB,EAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACGE,KAAK,CAACC,KAAN,CAAYE,MAAZ,gBACC;AAAK,MAAA,GAAG,EAAEH,KAAK,CAACC,KAAN,CAAYE,MAAZ,CAAmB,CAAnB,EAAsBC,GAAhC;AAAqC,MAAA,GAAG,EAAC,EAAzC;AAA4C,MAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,YADD,gBAEC;AAAK,MAAA,GAAG,EAAEH,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgBC,GAA1B;AAA+B,MAAA,GAAG,EAAC,EAAnC;AAAsC,MAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA,kBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAYA,MAAM,CAACH,IAArC,EAA2CI,IAA3C,CAAgD,IAAhD,CADH,QAC4D,GAD5D,EAEGT,KAAK,CAACC,KAAN,CAAYI,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlBQN,O;UACqBD,iB;;;KADrBC,O;AAoBT,eAAeA,OAAf","sourcesContent":["import React from \"react\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport \"./styles/SongRow.css\"\n\nfunction SongRow({ track }) {\n  const [{album}, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"songRow\">\n      {track.album.images ? \n        <img src={track.album.images[0].url} alt=\"\" className=\"songRow__album\" /> :\n        <img src={album.images[0].url} alt=\"\" className=\"songRow__album\" /> }\n      \n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;\n"]},"metadata":{},"sourceType":"module"}