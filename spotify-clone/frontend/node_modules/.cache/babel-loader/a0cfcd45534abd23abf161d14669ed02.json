{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Body.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles/Body.css\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body({\n  spotify\n}) {\n  _s();\n\n  var _playlists$items$, _playlists$items$2, _playlists$items$3;\n\n  const [{\n    discover_weekly,\n    playlists,\n    current_playlist\n  }, dispatch] = useDataLayerValue();\n  console.log(playlists);\n  console.log(discover_weekly); // console.log(current_playlist)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: playlists.items ? playlists.items[0].images[0].url : null,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__infoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: playlists.items ? playlists === null || playlists === void 0 ? void 0 : (_playlists$items$ = playlists.items[0]) === null || _playlists$items$ === void 0 ? void 0 : _playlists$items$.name : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlists.items ? playlists === null || playlists === void 0 ? void 0 : (_playlists$items$2 = playlists.items[0]) === null || _playlists$items$2 === void 0 ? void 0 : _playlists$items$2.owner.display_name : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: playlists.items ? playlists === null || playlists === void 0 ? void 0 : (_playlists$items$3 = playlists.items[0]) === null || _playlists$items$3 === void 0 ? void 0 : _playlists$items$3.description : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__songs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__icons\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n          className: \"body__shuffle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Favorite, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHoriz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"F4mn+Gu0enkcQvJGA3lWuT73is0=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Body.js"],"names":["React","PlayCircleFilled","Favorite","MoreHoriz","useDataLayerValue","Header","SongRow","Body","spotify","discover_weekly","playlists","current_playlist","dispatch","console","log","items","images","url","name","owner","display_name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,oBAAtD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAyB;AAAA;;AAAA;;AACvB,QAAM,CAAC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,GAAD,EAAmDC,QAAnD,IAA+DR,iBAAiB,EAAtF;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ,EAHuB,CAIvB;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEE;AAAK,QAAA,GAAG,EAAIE,SAAS,CAACK,KAAV,GAAkBL,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAmBC,MAAnB,CAA0B,CAA1B,EAA6BC,GAA/C,GAAqD,IAAjE;AAAuE,QAAA,GAAG,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCAIE;AAAA,oBAAUP,SAAS,CAACK,KAAV,GAAkBL,SAAlB,aAAkBA,SAAlB,4CAAkBA,SAAS,CAAEK,KAAX,CAAiB,CAAjB,CAAlB,sDAAkB,kBAAqBG,IAAvC,GAA8C;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAKR,SAAS,CAACK,KAAV,GAAkBL,SAAlB,aAAkBA,SAAlB,6CAAkBA,SAAS,CAAEK,KAAX,CAAiB,CAAjB,CAAlB,uDAAkB,mBAAqBI,KAArB,CAA2BC,YAA7C,GAA4D;AAAjE;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAIV,SAAS,CAACK,KAAV,GAAkBL,SAAlB,aAAkBA,SAAlB,6CAAkBA,SAAS,CAAEK,KAAX,CAAiB,CAAjB,CAAlB,uDAAkB,mBAAqBM,WAAvC,GAAqD;AAAzD;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAeE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,gBAAD;AAAkB,UAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GApCQd,I;UAC8DH,iB;;;KAD9DG,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React from \"react\"; \nimport \"./styles/Body.css\";\nimport { PlayCircleFilled, Favorite, MoreHoriz } from \"@material-ui/icons\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\n\nfunction Body({spotify}) {\n  const [{ discover_weekly, playlists, current_playlist }, dispatch] = useDataLayerValue();\n  console.log(playlists);\n  console.log(discover_weekly);\n  // console.log(current_playlist)\n\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify} /> \n      <div className=\"body__info\">\n        {/* <img src = {discover_weekly?.images[0]?.url} alt=\"\" /> */}\n        <img src = {playlists.items ? playlists.items[0].images[0].url : null} alt=\"\" />\n        <div className=\"body__infoText\">\n          {/* <strong>PLAYLIST</strong>\n          <h2>Discover Weekly</h2> \n          <p>{discover_weekly?.description}</p> */}\n          <strong>{ playlists.items ? playlists?.items[0]?.name : null}</strong>\n          <h2>{playlists.items ? playlists?.items[0]?.owner.display_name : null}</h2>\n          <p>{playlists.items ? playlists?.items[0]?.description : null}</p>\n          {/* <p>{playlists.items ? playlists?.items[0]?.tracks : null}</p> */}\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilled className=\"body__shuffle\" />\n          <Favorite fontSize=\"large\" />\n          <MoreHoriz />\n        </div>\n        {/* {discover_weekly?.tracks.items.map((item) => (\n          <SongRow track={item.track} />\n        ))} */}\n        {/* {playlists.items ? playlists.items[0].tracks} */}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}