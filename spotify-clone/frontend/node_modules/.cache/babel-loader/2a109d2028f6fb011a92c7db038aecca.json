{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/AlbumsLibrary.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDataLayerValue } from '../../contexts/DataLayer';\nimport \"./styles/AlbumsLibrary.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AlbumsLibrary({\n  album,\n  spotify\n}) {\n  _s();\n\n  var _album$images$;\n\n  const [{}, dispatch] = useDataLayerValue();\n\n  const selectAlbum = () => {\n    console.log(album.id);\n    spotify.getAlbum(album.id).then(album => {\n      console.log(album);\n      console.log(album.tracks);\n      dispatch({\n        type: \"SET_ALBUM\",\n        album\n      });\n      dispatch({\n        type: \"SET_TRACKS\",\n        tracks: album.tracks.items\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album__body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album__cover\",\n      onClick: selectAlbum,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: album === null || album === void 0 ? void 0 : (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album__Info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: album === null || album === void 0 ? void 0 : album.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: (album === null || album === void 0 ? void 0 : album.album_type) === \"single\" ? \"EP\" : \"Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AlbumsLibrary, \"IdhM3eYXGcHiEgwsxfsb2XobvQY=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = AlbumsLibrary;\nexport default AlbumsLibrary;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumsLibrary\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/AlbumsLibrary.js"],"names":["React","useDataLayerValue","AlbumsLibrary","album","spotify","dispatch","selectAlbum","console","log","id","getAlbum","then","tracks","type","items","images","url","name","album_type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAO,4BAAP;;;AAGA,SAASC,aAAT,CAAuB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAvB,EAAyC;AAAA;;AAAA;;AACvC,QAAM,CAAC,EAAD,EAAKC,QAAL,IAAiBJ,iBAAiB,EAAxC;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,EAAlB;AACAL,IAAAA,OAAO,CAACM,QAAR,CAAiBP,KAAK,CAACM,EAAvB,EACCE,IADD,CACOR,KAAD,IAAW;AACfI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACS,MAAlB;AACAP,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,WADC;AAEPV,QAAAA;AAFO,OAAD,CAAR;AAIAE,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,YADC;AAEPD,QAAAA,MAAM,EAAET,KAAK,CAACS,MAAN,CAAaE;AAFd,OAAD,CAAR;AAID,KAZD;AAaD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAER,WAAvC;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEH,KAAF,aAAEA,KAAF,yCAAEA,KAAK,CAAEY,MAAP,CAAc,CAAd,CAAF,mDAAE,eAAkBC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA,kBAAKb,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEc;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,CAAAd,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEe,UAAP,MAAsB,QAAtB,GAAiC,IAAjC,GAAwC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhCQhB,a;UACgBD,iB;;;KADhBC,a;AAkCT,eAAeA,aAAf","sourcesContent":["import React from 'react'; \nimport { useDataLayerValue } from '../../contexts/DataLayer';\nimport \"./styles/AlbumsLibrary.css\";\n\n\nfunction AlbumsLibrary({album, spotify}) {\n  const [{}, dispatch] = useDataLayerValue();\n  \n  const selectAlbum = () => {\n    console.log(album.id);\n    spotify.getAlbum(album.id)\n    .then((album) => {\n      console.log(album);\n      console.log(album.tracks);\n      dispatch({\n        type: \"SET_ALBUM\",\n        album\n      });\n      dispatch({\n        type: \"SET_TRACKS\",\n        tracks: album.tracks.items\n      })\n    });\n  }\n\n  return (\n    <div className=\"album__body\">\n      <div className=\"album__cover\" onClick={selectAlbum}>\n        <img src={album?.images[0]?.url}/>\n      </div>\n      <div className=\"album__Info\">\n        <h2>{album?.name}</h2>\n        <h3>{album?.album_type === \"single\" ? \"EP\" : \"Album\"}</h3>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default AlbumsLibrary; "]},"metadata":{},"sourceType":"module"}