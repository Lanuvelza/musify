{"ast":null,"code":"const axios = require('axios');\n\nconst api_key = process.env.REACT_APP_YOUTUBE_API_KEY;\nconst baseURL = 'https://www.googleapis.com/youtube/v3';\n\nconst sortChannelsBySubscriberCount = channels => {\n  channels.sort((a, b) => a.statistics.subscriberCount > b.statistics.subscriberCount ? 1 : -1);\n};\n\nexport const searchChannels = name => {\n  return axios.get(`${baseURL}/search?key=${api_key}&q=${name}&type=channel&part=snippet&maxResults=25`).then(response => {\n    const ids = response.data.items.map(item => {\n      return item.id.channelId;\n    }); // console.log(ids);\n\n    const channels = ids.map(id => {\n      return axios.get(`${baseURL}/channels?key=${api_key}&part=snippet,contentDetails,contentOwnerDetails,id,statistics,status,topicDetails&id=${id}`).then(result => {\n        // console.log(result);\n        return result.data;\n      });\n    });\n    const channelsData = Promise.all(channels).then(data => {\n      const channelDataDetails = data.map(detail => {\n        return detail.items[0];\n      });\n      return channelDataDetails;\n    });\n    console.log(channelsData);\n    return sortChannelsBySubscriberCount(channelsData);\n  });\n};","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/youtube/youtube.js"],"names":["axios","require","api_key","process","env","REACT_APP_YOUTUBE_API_KEY","baseURL","sortChannelsBySubscriberCount","channels","sort","a","b","statistics","subscriberCount","searchChannels","name","get","then","response","ids","data","items","map","item","id","channelId","result","channelsData","Promise","all","channelDataDetails","detail","console","log"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA5B;AACA,MAAMC,OAAO,GAAG,uCAAhB;;AAGA,MAAMC,6BAA6B,GAAIC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAACC,IAAT,CAAc,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACE,UAAF,CAAaC,eAAb,GAA+BF,CAAC,CAACC,UAAF,CAAaC,eAA5C,GAA8D,CAA9D,GAAiE,CAAC,CAAzF;AACD,CAFD;;AAIA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACtC,SAAOf,KAAK,CAACgB,GAAN,CAAW,GAAEV,OAAQ,eAAcJ,OAAQ,MAAKa,IAAK,0CAArD,EACNE,IADM,CACDC,QAAQ,IAAI;AAEhB,UAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,GAApB,CAAyBC,IAAD,IAAU;AAC5C,aAAOA,IAAI,CAACC,EAAL,CAAQC,SAAf;AACD,KAFW,CAAZ,CAFgB,CAMhB;;AAEA,UAAMjB,QAAQ,GAAGW,GAAG,CAACG,GAAJ,CAASE,EAAD,IAAQ;AAC/B,aAAOxB,KAAK,CAACgB,GAAN,CAAW,GAAEV,OAAQ,iBAAgBJ,OAAQ,yFAAwFsB,EAAG,EAAxI,EACNP,IADM,CACDS,MAAM,IAAI;AACd;AACA,eAAOA,MAAM,CAACN,IAAd;AACD,OAJM,CAAP;AAKD,KANgB,CAAjB;AAQA,UAAMO,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYrB,QAAZ,EAAsBS,IAAtB,CAA2BG,IAAI,IAAI;AACtD,YAAMU,kBAAkB,GAAGV,IAAI,CAACE,GAAL,CAAUS,MAAD,IAAY;AAC9C,eAAOA,MAAM,CAACV,KAAP,CAAa,CAAb,CAAP;AACD,OAF0B,CAA3B;AAGA,aAAOS,kBAAP;AACD,KALoB,CAArB;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAEA,WAAOpB,6BAA6B,CAACoB,YAAD,CAApC;AACD,GA3BM,CAAP;AA4BD,CA7BM","sourcesContent":["const axios = require('axios');\nconst api_key = process.env.REACT_APP_YOUTUBE_API_KEY;\nconst baseURL = 'https://www.googleapis.com/youtube/v3';\n\n\nconst sortChannelsBySubscriberCount = (channels) => {\n  channels.sort((a,b) => a.statistics.subscriberCount > b.statistics.subscriberCount ? 1: -1);\n}\n\nexport const searchChannels = (name) => {\n  return axios.get(`${baseURL}/search?key=${api_key}&q=${name}&type=channel&part=snippet&maxResults=25`)\n  .then(response => {\n    \n    const ids = response.data.items.map((item) => {\n      return item.id.channelId;\n    }) \n\n    // console.log(ids);\n\n    const channels = ids.map((id) => {\n      return axios.get(`${baseURL}/channels?key=${api_key}&part=snippet,contentDetails,contentOwnerDetails,id,statistics,status,topicDetails&id=${id}`)\n      .then(result => {\n        // console.log(result);\n        return result.data;\n      });\n    })\n\n    const channelsData = Promise.all(channels).then(data => {\n      const channelDataDetails = data.map((detail) => {\n        return detail.items[0];\n      })\n      return channelDataDetails;\n    });\n\n    console.log(channelsData);\n\n    return sortChannelsBySubscriberCount(channelsData);\n  });\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}