{"ast":null,"code":"'use strict';\n\nconst OFFSET_BASIS_32 = 2166136261;\n\nconst fnv1a = string => {\n  let hash = OFFSET_BASIS_32;\n\n  for (let i = 0; i < string.length; i++) {\n    hash ^= string.charCodeAt(i); // 32-bit FNV prime: 2**24 + 2**8 + 0x93 = 16777619\n    // Using bitshift for accuracy and performance. Numbers in JS suck.\n\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n\n  return hash >>> 0;\n};\n\nmodule.exports = fnv1a; // TODO: remove this in the next major version, refactor the whole definition to:\n\nmodule.exports.default = fnv1a;","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/node_modules/@sindresorhus/fnv1a/index.js"],"names":["OFFSET_BASIS_32","fnv1a","string","hash","i","length","charCodeAt","module","exports","default"],"mappings":"AAAA;;AACA,MAAMA,eAAe,GAAG,UAAxB;;AAEA,MAAMC,KAAK,GAAGC,MAAM,IAAI;AACvB,MAAIC,IAAI,GAAGH,eAAX;;AAEA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvCD,IAAAA,IAAI,IAAID,MAAM,CAACI,UAAP,CAAkBF,CAAlB,CAAR,CADuC,CAGvC;AACA;;AACAD,IAAAA,IAAI,IAAI,CAACA,IAAI,IAAI,CAAT,KAAeA,IAAI,IAAI,CAAvB,KAA6BA,IAAI,IAAI,CAArC,KAA2CA,IAAI,IAAI,CAAnD,KAAyDA,IAAI,IAAI,EAAjE,CAAR;AACA;;AAED,SAAOA,IAAI,KAAK,CAAhB;AACA,CAZD;;AAcAI,MAAM,CAACC,OAAP,GAAiBP,KAAjB,C,CACA;;AACAM,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBR,KAAzB","sourcesContent":["'use strict';\nconst OFFSET_BASIS_32 = 2166136261;\n\nconst fnv1a = string => {\n\tlet hash = OFFSET_BASIS_32;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\thash ^= string.charCodeAt(i);\n\n\t\t// 32-bit FNV prime: 2**24 + 2**8 + 0x93 = 16777619\n\t\t// Using bitshift for accuracy and performance. Numbers in JS suck.\n\t\thash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n\t}\n\n\treturn hash >>> 0;\n};\n\nmodule.exports = fnv1a;\n// TODO: remove this in the next major version, refactor the whole definition to:\nmodule.exports.default = fnv1a;\n"]},"metadata":{},"sourceType":"script"}