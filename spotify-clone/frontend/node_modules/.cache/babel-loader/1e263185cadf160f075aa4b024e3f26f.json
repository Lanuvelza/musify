{"ast":null,"code":"var _jsxFileName = \"/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Search } from \"@material-ui/icons\";\nimport \"./styles/Header.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header({\n  spotify\n}) {\n  _s();\n\n  var _user$images$;\n\n  console.log(spotify);\n  const [{\n    user\n  }, dispatch] = useDataLayerValue();\n  const [search, setSearch] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    spotify.searchTracks(search).then(results => {\n      console.log(results.tracks);\n      dispatch({\n        type: \"SET_TRACKS\",\n        tracks: results.tracks\n      });\n    });\n    spotify.searchArtists(search).then(results => {\n      console.log(results.artists);\n      dispatch({\n        type: \"SET_ARTISTS\",\n        artists: results.artists\n      });\n    });\n    spotify.searchAlbums(search).then(results => {\n      console.log(results.albums);\n      dispatch({\n        type: \"SET_ALBUMS\",\n        albums: results.albums\n      });\n    });\n    dispatch({\n      type: \"SET_CURRENT_PLAYLIST\",\n      current_playlist: null\n    });\n    setSearch(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__left\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        className: \"header__left__searchIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for Artists, Songs, or Albums\",\n          type: \"text\",\n          value: search,\n          onChange: e => {\n            setSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__right\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: user === null || user === void 0 ? void 0 : (_user$images$ = user.images[0]) === null || _user$images$ === void 0 ? void 0 : _user$images$.url,\n        alt: user === null || user === void 0 ? void 0 : user.display_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: user === null || user === void 0 ? void 0 : user.display_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"ripTDJNQ3wKFWHlslE+rI/hb4rs=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/player/Header.js"],"names":["React","useState","Search","Avatar","useDataLayerValue","Header","spotify","console","log","user","dispatch","search","setSearch","handleSubmit","event","preventDefault","searchTracks","then","results","tracks","type","searchArtists","artists","searchAlbums","albums","current_playlist","e","target","value","images","url","display_name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"; \nimport { Search } from \"@material-ui/icons\"; \nimport \"./styles/Header.css\";\nimport { Avatar } from \"@material-ui/core\"; \nimport { useDataLayerValue } from \"../../contexts/DataLayer\";\n\n\nfunction Header({ spotify }) {\n  console.log(spotify);\n  const [{ user }, dispatch] = useDataLayerValue(); \n  const [search, setSearch] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    spotify.searchTracks(search)\n    .then((results) => {\n      console.log(results.tracks);\n      dispatch({\n        type: \"SET_TRACKS\",\n        tracks: results.tracks\n      });\n    });\n\n    spotify.searchArtists(search)\n    .then((results) => {\n      console.log(results.artists);\n      dispatch({\n        type: \"SET_ARTISTS\",\n        artists: results.artists\n      });\n    });\n\n    spotify.searchAlbums(search)\n    .then((results) => {\n      console.log(results.albums);\n      dispatch({\n        type: \"SET_ALBUMS\",\n        albums: results.albums\n      });\n    });\n\n    dispatch({\n      type: \"SET_CURRENT_PLAYLIST\",\n      current_playlist: null\n    });\n\n    setSearch(\"\");\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n         <Search className=\"header__left__searchIcon\"/>\n        <form onSubmit={handleSubmit}>\n         <input \n          placeholder=\"Search for Artists, Songs, or Albums\" \n          type=\"text\" \n          value={search} \n          onChange={(e) => {setSearch(e.target.value)}}\n        />\n        </form>\n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\nexport default Header;"]},"metadata":{},"sourceType":"module"}