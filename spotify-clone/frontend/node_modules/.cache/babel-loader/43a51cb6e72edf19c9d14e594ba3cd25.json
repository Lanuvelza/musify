{"ast":null,"code":"import * as React from 'react';\nimport { px, styled } from '../styles';\nimport Next from './icons/Next';\nimport Pause from './icons/Pause';\nimport Play from './icons/Play';\nimport Previous from './icons/Previous';\nvar Wrapper = styled('div')({}, function (_a) {\n  var style = _a.style;\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    height: px(style.h),\n    justifyContent: 'center',\n    '@media (max-width: 767px)': {\n      padding: px(10)\n    },\n    '> div': {\n      minWidth: px(style.h),\n      textAlign: 'center'\n    },\n    button: {\n      color: style.c,\n      fontSize: px(16),\n      '&.rswp__toggle': {\n        fontSize: px(28)\n      }\n    }\n  };\n}, 'ControlsRSWP');\nexport default function Controls(props) {\n  var isExternalDevice = props.isExternalDevice,\n      isPlaying = props.isPlaying,\n      onClickNext = props.onClickNext,\n      onClickPrevious = props.onClickPrevious,\n      onClickTogglePlay = props.onClickTogglePlay,\n      nextTracks = props.nextTracks,\n      previousTracks = props.previousTracks,\n      _a = props.styles,\n      color = _a.color,\n      height = _a.height;\n  return React.createElement(Wrapper, {\n    style: {\n      c: color,\n      h: height\n    }\n  }, React.createElement(\"div\", null, (!!previousTracks.length || isExternalDevice) && React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClickPrevious,\n    \"aria-label\": \"Previous Track\"\n  }, React.createElement(Previous, null))), React.createElement(\"div\", null, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"rswp__toggle\",\n    onClick: onClickTogglePlay,\n    \"aria-label\": isPlaying ? 'Pause' : 'Play'\n  }, isPlaying ? React.createElement(Pause, null) : React.createElement(Play, null))), React.createElement(\"div\", null, (!!nextTracks.length || isExternalDevice) && React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClickNext,\n    \"aria-label\": \"Next Track\"\n  }, React.createElement(Next, null))));\n}","map":{"version":3,"sources":["../../src/components/Controls.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { px, styled } from '../styles';\nimport Next from './icons/Next';\nimport Pause from './icons/Pause';\nimport Play from './icons/Play';\nimport Previous from './icons/Previous';\nvar Wrapper = styled('div')({}, function (_a) {\n    var style = _a.style;\n    return ({\n        alignItems: 'center',\n        display: 'flex',\n        height: px(style.h),\n        justifyContent: 'center',\n        '@media (max-width: 767px)': {\n            padding: px(10),\n        },\n        '> div': {\n            minWidth: px(style.h),\n            textAlign: 'center',\n        },\n        button: {\n            color: style.c,\n            fontSize: px(16),\n            '&.rswp__toggle': {\n                fontSize: px(28),\n            },\n        },\n    });\n}, 'ControlsRSWP');\nexport default function Controls(props) {\n    var isExternalDevice = props.isExternalDevice, isPlaying = props.isPlaying, onClickNext = props.onClickNext, onClickPrevious = props.onClickPrevious, onClickTogglePlay = props.onClickTogglePlay, nextTracks = props.nextTracks, previousTracks = props.previousTracks, _a = props.styles, color = _a.color, height = _a.height;\n    return (React.createElement(Wrapper, { style: { c: color, h: height } },\n        React.createElement(\"div\", null, (!!previousTracks.length || isExternalDevice) && (React.createElement(\"button\", { type: \"button\", onClick: onClickPrevious, \"aria-label\": \"Previous Track\" },\n            React.createElement(Previous, null)))),\n        React.createElement(\"div\", null,\n            React.createElement(\"button\", { type: \"button\", className: \"rswp__toggle\", onClick: onClickTogglePlay, \"aria-label\": isPlaying ? 'Pause' : 'Play' }, isPlaying ? React.createElement(Pause, null) : React.createElement(Play, null))),\n        React.createElement(\"div\", null, (!!nextTracks.length || isExternalDevice) && (React.createElement(\"button\", { type: \"button\", onClick: onClickNext, \"aria-label\": \"Next Track\" },\n            React.createElement(Next, null))))));\n}\n//# sourceMappingURL=Controls.js.map"]},"metadata":{},"sourceType":"module"}