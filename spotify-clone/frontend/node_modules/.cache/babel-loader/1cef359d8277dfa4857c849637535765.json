{"ast":null,"code":"const axios = require('axios');\n\nconst api_key = process.env.REACT_APP_YOUTUBE_API_KEY;\nconst baseURL = 'https://www.googleapis.com/youtube/v3';\n\nconst sortChannelsBySubscriberCount = channels => {\n  console.log(channels);\n  channels.sort((a, b) => a.statistics.subscriberCount < b.statistics.subscriberCount ? 1 : -1);\n};\n\nconst filterChannelsByVisibleSubscriberCount = channels => {\n  return channels.filter(channel => channel.statistics.hiddenSubscriberCount === false);\n};\n\nexport const searchChannels = name => {\n  return axios.get(`${baseURL}/search?key=${api_key}&q=${name}&type=channel&part=snippet&maxResults=25`).then(response => {\n    console.log(response);\n    const ids = response.data.items.map(item => {\n      return item.id.channelId;\n    });\n    console.log(ids);\n    const channels = ids.map(id => {\n      return axios.get(`${baseURL}/channels?key=${api_key}&part=snippet,contentDetails,contentOwnerDetails,id,statistics,status,topicDetails&id=${id}`).then(result => {\n        // console.log(result);\n        return result.data;\n      });\n    });\n    const channelsData = Promise.all(channels).then(data => {\n      const channelDataDetails = data.map(detail => {\n        return detail.items[0];\n      });\n      sortChannelsBySubscriberCount(filterChannelsByVisibleSubscriberCount(channelDataDetails));\n      return channelDataDetails;\n    });\n    console.log(channelsData);\n    return channelsData;\n  });\n};","map":{"version":3,"sources":["/Users/ianlam/projects-after-lighthouse/spotify-clone/spotify-clone/src/components/youtube/youtube.js"],"names":["axios","require","api_key","process","env","REACT_APP_YOUTUBE_API_KEY","baseURL","sortChannelsBySubscriberCount","channels","console","log","sort","a","b","statistics","subscriberCount","filterChannelsByVisibleSubscriberCount","filter","channel","hiddenSubscriberCount","searchChannels","name","get","then","response","ids","data","items","map","item","id","channelId","result","channelsData","Promise","all","channelDataDetails","detail"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA5B;AACA,MAAMC,OAAO,GAAG,uCAAhB;;AAGA,MAAMC,6BAA6B,GAAIC,QAAD,IAAc;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAA,EAAAA,QAAQ,CAACG,IAAT,CAAc,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACE,UAAF,CAAaC,eAAb,GAA+BF,CAAC,CAACC,UAAF,CAAaC,eAA7C,GAAgE,CAAhE,GAAoE,CAAC,CAA5F;AACD,CAHD;;AAKA,MAAMC,sCAAsC,GAAGR,QAAD,IAAc;AAC1D,SAAOA,QAAQ,CAACS,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACJ,UAAR,CAAmBK,qBAAnB,KAA6C,KAA1E,CAAP;AACD,CAFD;;AAKA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACtC,SAAOrB,KAAK,CAACsB,GAAN,CAAW,GAAEhB,OAAQ,eAAcJ,OAAQ,MAAKmB,IAAK,0CAArD,EACNE,IADM,CACDC,QAAQ,IAAI;AAEhBf,IAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AAEA,UAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,GAApB,CAAyBC,IAAD,IAAU;AAC5C,aAAOA,IAAI,CAACC,EAAL,CAAQC,SAAf;AACD,KAFW,CAAZ;AAIAtB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AAEA,UAAMjB,QAAQ,GAAGiB,GAAG,CAACG,GAAJ,CAASE,EAAD,IAAQ;AAC/B,aAAO9B,KAAK,CAACsB,GAAN,CAAW,GAAEhB,OAAQ,iBAAgBJ,OAAQ,yFAAwF4B,EAAG,EAAxI,EACNP,IADM,CACDS,MAAM,IAAI;AACd;AACA,eAAOA,MAAM,CAACN,IAAd;AACD,OAJM,CAAP;AAKD,KANgB,CAAjB;AAQA,UAAMO,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAY3B,QAAZ,EAAsBe,IAAtB,CAA2BG,IAAI,IAAI;AACtD,YAAMU,kBAAkB,GAAGV,IAAI,CAACE,GAAL,CAAUS,MAAD,IAAY;AAC9C,eAAOA,MAAM,CAACV,KAAP,CAAa,CAAb,CAAP;AACD,OAF0B,CAA3B;AAIApB,MAAAA,6BAA6B,CAACS,sCAAsC,CAACoB,kBAAD,CAAvC,CAA7B;AAEA,aAAOA,kBAAP;AACD,KARoB,CAArB;AAUA3B,IAAAA,OAAO,CAACC,GAAR,CAAYuB,YAAZ;AAEA,WAAOA,YAAP;AACD,GAhCM,CAAP;AAiCD,CAlCM","sourcesContent":["const axios = require('axios');\nconst api_key = process.env.REACT_APP_YOUTUBE_API_KEY;\nconst baseURL = 'https://www.googleapis.com/youtube/v3';\n\n\nconst sortChannelsBySubscriberCount = (channels) => {\n  console.log(channels);\n  channels.sort((a,b) => (a.statistics.subscriberCount < b.statistics.subscriberCount) ? 1 : -1);\n}\n\nconst filterChannelsByVisibleSubscriberCount =(channels) => {\n  return channels.filter((channel) => channel.statistics.hiddenSubscriberCount === false);\n}\n\n\nexport const searchChannels = (name) => {\n  return axios.get(`${baseURL}/search?key=${api_key}&q=${name}&type=channel&part=snippet&maxResults=25`)\n  .then(response => {\n\n    console.log(response)\n    \n    const ids = response.data.items.map((item) => {\n      return item.id.channelId;\n    }) \n\n    console.log(ids);\n\n    const channels = ids.map((id) => {\n      return axios.get(`${baseURL}/channels?key=${api_key}&part=snippet,contentDetails,contentOwnerDetails,id,statistics,status,topicDetails&id=${id}`)\n      .then(result => {\n        // console.log(result);\n        return result.data;\n      });\n    })\n\n    const channelsData = Promise.all(channels).then(data => {\n      const channelDataDetails = data.map((detail) => {\n        return detail.items[0];\n      })\n\n      sortChannelsBySubscriberCount(filterChannelsByVisibleSubscriberCount(channelDataDetails));\n\n      return channelDataDetails;\n    });\n\n    console.log(channelsData);\n\n    return channelsData;\n  });\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}